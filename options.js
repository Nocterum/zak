module.exports = {
//–ò–ì–†–û–í–´–ï –ö–ù–û–ü–ö–ò=============================================================================================================================================
    gameOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: 1, callback_data: '1'},{text: 2, callback_data: '2'},{text: 3, callback_data: '3'}],
                [{text: 4, callback_data: '4'},{text: 5, callback_data: '5'},{text: 6, callback_data: '6'}],
                [{text: 7, callback_data: '7'},{text: 8, callback_data: '8'},{text: 9, callback_data: '9'}],
                [{text: 0, callback_data: '0'}],
            ]
        })
    },
    
    againOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ò–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑?', callback_data: '/again'},{text: '–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', callback_data: '/infogame'}],
                [{text: '–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É', callback_data: '/mainmenu'}],
            ]
        })
    },

    resetOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', callback_data: '/reset'}],
            ]
        })
    },
//–ù–ê–í–ò–ì–ê–¶–ò–û–ù–ù–´–ï –ö–ù–û–ü–ö–ò=============================================================================================================================================
    mainMenuReturnOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },
//–†–ê–ë–û–ß–ò–ï –ö–ù–û–ü–ö–ò=============================================================================================================================================
    mainMenuOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ó–∞–ø—Ä–æ—Å: –æ—Å—Ç–∞—Ç–∫–∏+—Å—Ä–æ–∫–∏+—Ä–µ–∑–µ—Ä–≤ üîé', callback_data: '/beginwork'}],
                [{text: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤ 1–° ‚úÖ', callback_data: '/request1C'}],
                [{text: '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É ‚åõ', callback_data: '/supplierOrderStatus'}],
                // [{text: '–§—É–Ω–∫—Ü–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', callback_data: '/beginwork1'}],
            ]
        })
    },

    settingsOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º üîÉ', callback_data: '/editNickname'}],
                [{text: '–ò–∑–º–µ–Ω–∏—Ç—å –µ–º–µ–π–ª üì≠', callback_data: '/editEmail'}]
            ]
        })
    },

    beginWorkOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°', callback_data: '/beginwork'}],
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },

    beginWork2Options: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ò—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–π –∫–∞—Ç–∞–ª–æ–≥ üîé', callback_data: '/catalog–°heck'}],
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },

    beginWork3Options: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ö —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—É–ø–µ–Ω–∏ –ø–æ–∏—Å–∫–∞ ‚û°', callback_data: '/checkVendor'}],
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },

    workOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É üîé', callback_data: '/catalog–°heck'}, {text: '–ü–æ–∏—Å–∫ –ø–æ –±—Ä–µ–Ω–¥—É üîé', callback_data: '/enterBrand'}],
                [{text: '–û—Å—Ç–∞—Ç–∫–∏ ORAC üÖæ', callback_data: '/oracCheck'}],
                [{text: '–û—Å—Ç–∞—Ç–∫–∏ Ultra Wood üìã', callback_data: '/UWCheck'}],
            ]
        })
    },

    choiseOption: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–¢–∫–∞–Ω–∏ Morris', callback_data: '/MorrisTextile'}],
                [{text: '–û–±–æ–∏ Morris', callback_data: '/MorrisWallpapper'}],
            ]
        })
    },

    work1Options: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π', callback_data: '/work2'}],
                [{text: '–î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑', callback_data: '/work3'}],
            ]
        })
    },

    startFindOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ üìß', callback_data: '/enterReserveNumber'}],
                [{text: '–ò—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–π –±—Ä–µ–Ω–¥ üîé', callback_data: '/enterBrand'}],
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },

    startFind1Options: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ò—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–π –±—Ä–µ–Ω–¥ üîé', callback_data: '/enterBrand'}],
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },

    startFind2Options: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–î–∞ ‚úÖ', callback_data: '/preSendEmailReserveYes'},{text: '–ù–µ—Ç ‚ùå', callback_data: '/preSendEmailReserveNo'}],
                [{text: '–ò—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–π –∫–∞—Ç–∞–ª–æ–≥ üîé', callback_data: '/catalog–°heck'}],
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },

    checkVendorOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°', callback_data: '/checkVendor'}],
            ]
        })
    },

    enterReserveNumberOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å üíæ‚û°', callback_data: '/preSendEmail'}],
            ]
        })
    }, 

    sendReserveOptions: {
        parse_mode: 'HTML',
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å email üì®', callback_data: '/sendReserveEmail'}],
                [{text: '–ò—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–π –∫–∞—Ç–∞–ª–æ–≥ üîé', callback_data: '/catalog–°heck'}],
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', callback_data: '/mainmenu'}],
            ]
        })
    },

    resetInfoWorkOptions: {
        reply_markup: JSON.stringify( {
            inline_keyboard: [
                [{text: '–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã üìù', callback_data: '/resetInfoWork'}],
            ]
        })
    },
}