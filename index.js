const TelegramApi = require('node-telegram-bot-api');
const axios = require('axios');
const cheerio = require('cheerio');
const path = require('path');
const fs = require('fs');
const ExcelJS = require('exceljs');
const token = '6076442091:AAGUxzIT8C7G7_hx4clixZpIi0Adtb2p2MA';
const bot = new TelegramApi(token, {
    polling: {
        interval: 300, //–º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Ç–≥ "–º–ª—Å–µ–∫"
        autoStart: true, //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        params: {
            timeout:10 //—Ç–∞–π–º–∞—É—Ç –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ "–º–ª—Å–µ–∫"
        }
    }
});

//–ò–ú–ü–û–†–¢–´
const {gameOptions, againOptions, resetOptions,
     workOptions, VCOptions, startFindOptions, startFind2Options, 
     beginWorkOptions, beginWork2Options, mainMenuOptions, 
     enterReserveNumberOptions, sendReserveOptions, beginWork3Options} = require('./options');
const sequelize = require('./db');
const UserModel = require('./models');
const {transporter, recipient} = require('./nodemailer');
const clientRDP = require('./rdp');
const nodemailer = require('./nodemailer');
//const BrandModel = require('./models');

//–ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
password = {};
chats = {};
let backLc = '/mainmenu'; //–ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–ø—Ü–∏–∏ "–Ω–∞–∑–∞–¥"
lc = {};    //–ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
findCatalogIndex = {};   //—Å–æ—Å—Ç–æ—è–Ω–∏–µ: –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–π–¥–µ—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–µ–∫—Å—Ç–∏–ª—è.
botMsgIdx = {};    //–∞–π–¥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
sorry = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è —ç—Ç–æ–º—É –ø–æ–∫–∞ –µ—â—ë —É—á—É—Å—åüòÖ\n–ü—Ä–æ—à—É –≤–∞—Å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å –¥–∞–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º –∫\npurchasing_internal@manders.ru';
let subject = {};   //—Ç–µ–º–∞ –ø–∏—Å—å–º–∞
let textMail = {};  //—Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞

module.exports = backLc;

//–ú–ï–ù–Æ –ö–û–ú–ê–ù–î
bot.setMyCommands([
    {command: '/mainmenu', description:'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'},
    {command: '/beginwork', description:'–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã'},
    {command: '/infowork', description:'–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤'},
])

//–§–£–ù–ö–¶–ò–ò=========================================================================================

// –§—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞ –µ–º–µ–π–ª–∞
const editEmail = async (chatId) => {
    lc = '/editEmail'
    return bot.sendMessage(chatId, `–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –í–∞—à —Ä–∞–±–æ—á–∏–π e-mail:`)
}

// –§—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞
const editNickname = async (chatId) => {
    lc = '/editNickname'
    return bot.sendMessage(chatId, `–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –í–∞—à –Ω–∏–∫–Ω–µ–π–º:`)
}

const startRequest1C = async (chatId) => {
    try {
        
        const search = 'http://post.manders.ru:10001/QuantityProduct.php';

        
        const axiosPost = await axios.post(search, {
            –ê—Ä—Ç–∏–∫—É–ª: 'PLGUM5'
        });
        
        const response = await axios.get(search);
        
        await bot.sendmessage(chatId, '');
        const $ = cheerio.load(response.data);
        const results = $('');

    } catch (e) {
        console.log(e);
    }
}

// –§—É–Ω–∫—Ü–∏—è html –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –¥–∞–Ω–Ω—ã–º –∏–∑ –ë–î
const startFind = async (chatId) => {
    lc = '/enterVC';

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });

    try {

        //–§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø–æ–∏—Å–∫–∞
        const searchUrl = `https://opusdeco.ru/search/?type=catalog&q=${user.brand}+${user.vendorCode}`;
        console.log('—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞ —Å—Å—ã–ª–∫–∞');

        //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç
        const response = await axios.get(searchUrl);
        const $ = cheerio.load(response.data);
        console.log('–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');

        //–°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –∏–∑ –ø–æ–∏—Å–∫–∞ 
        const firstProductLink = $('h3.item__card__title.card-product-general__title.mb-2 a').attr('href');

        if (firstProductLink) {
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
            const productResponse = await axios.get(`https://opusdeco.ru${firstProductLink}`);
            const $$ = cheerio.load(productResponse.data);
            console.log('—É—Å–ø–µ—à–Ω–æ –∑–∞—à—ë–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞');
            
            // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã
            let availabilityContent = ``;
            // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
            let expectedArrivalContent = ``;

            const modalBody = $$('#stockAvailabilityModal .modal-body');
            // –ù–∞—Ö–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É —Å –Ω–∞–ª–∏—á–∏–µ–º —Ç–æ–≤–∞—Ä–∞
            const availabilityTable = modalBody.find('table').eq(0);
            // –ù–∞—Ö–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
            const expectedArrivalTable = modalBody.find('table').eq(1);
            // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–∞
            const rowsValueAV = availabilityTable.find('tbody tr');
            // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
            const rowsValueEX = expectedArrivalTable.find('tbody tr');


            //–ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞
            availabilityTable.each((index, row) => {

                const rowsNames = $$(row).find('thead tr');
                const names = $$(rowsNames).find('th[scope=col]');
                
                rowsValueAV.each((index, rowValue) => {
                    const cells = $$(rowValue).find('td');
                
                // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
                availabilityContent += '–ù–∞–ª–∏—á–∏–µ –Ω–∞ —Å–∫–ª–∞–¥–µ:\n';
                availabilityContent += `${$$(names[0]).text()}: <pre>${$$(cells[0]).text()}</pre>\n`;
                availabilityContent += `${$$(names[1]).text()}: ${$$(cells[1]).text()}\n`;
                availabilityContent += `${$$(names[2]).text()}: ${$$(cells[2]).text()}\n`;
                availabilityContent += `${$$(names[3]).text()}: ${$$(cells[3]).text()}\n\n`;
            });
        });

            //–ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–±–ª–∏—Ü—É 
            expectedArrivalTable.each((index, row) => {
                
                const rowsNames = $$(row).find('thead tr');
                const names = $$(rowsNames).find('th[scope=col]');

                rowsValueEX.each((index, rowValue) => {
                    const cells = $$(rowValue).find('td');
                
                // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
                expectedArrivalContent += `–û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ:\n`;
                expectedArrivalContent += `${$$(names[0]).text()}: <pre>${$$(cells[0]).text()}</pre>\n`;
                expectedArrivalContent += `${$$(names[1]).text()}: ${$$(cells[1]).text()}\n`;
                expectedArrivalContent += `${$$(names[2]).text()}: ${$$(cells[2]).text()}\n`;
                expectedArrivalContent += `${$$(names[3]).text()}: ${$$(cells[3]).text()}\n\n`;
            });
        });

            await bot.deleteMessage(chatId, botMsgIdx);
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            if (availabilityTable.length === 0) {

                if (expectedArrivalTable.length === 1) {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö —Ç–æ–≤–∞—Ä–∞
                    bot.sendMessage(chatId, `${expectedArrivalContent}`, startFindOptions);
                    console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å–≤–∏–∏ –Ω–∞–ª–∏—á–∏—è, —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
                    return;

                } else {

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–æ–≤–∞—Ä–∞
                    bot.sendMessage(chatId, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', startFindOptions);
                    console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–æ–≤–∞—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞');
                    return;
                }
            }
                
            if (expectedArrivalTable.length === 0) {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–∞
                bot.sendMessage(chatId, `${availabilityContent}`, startFindOptions);
                console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ª–∏—á–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
                return;
            }
            
            if (availabilityTable !== expectedArrivalTable) {
            bot.sendMessage(chatId, `${availabilityContent}${expectedArrivalContent}`, startFindOptions);
            console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ª–∏—á–∏–∏ –∏ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞');
            return;
            }

        } else {
            await bot.deleteMessage(chatId, botMsgIdx);
            bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–∞ –∏ –±—Ä–µ–Ω–¥–∞.', startFindOptions);
            return;
        }

    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞', e);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.', startFindOptions);
        return bot.deleteMessage(chatId, botMsgIdx);
    }
   
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–º–µ–π–ª–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ
const sendReserveEmail = async (chatId) => {

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });
    //
    const copy = `${user.email}`;   //–í–ê–ñ–ù–û: –°—Ç–∞–≤–∏—Ç—å –≤ –∫–æ–ø–∏—é —Ç–æ–ª—å–∫–æ     purchasing_internal@manders.ru

    try {

        let result = transporter.sendMail({
            from: 'zakupki_bot@manders.ru',
            to: `${recipient}, ${copy}`,
            subject: subject,
            text: textMail,
        });
        
        console.log(result);
        bot.sendMessage(chatId, `–°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–º–æ–π: \n<pre>"${subject}"</pre>\n—É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –∏ –≤ –æ—Ç–¥–µ–ª –∑–∞–∫—É–ø–æ–∫.\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–∏—Å—å–º–æ —Å –≤—ã—à–µ—É–ø–æ–º—è–Ω—É—Ç–æ–π —Ç–µ–º–æ–π –Ω–∞ <b>purchasing_internal@manders.ru</b>.`, beginWork2Options)

      } catch (e) {
        console.error(e);
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ-–º–µ–π–ª–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–∫—Å–µ–ª—å —Ñ–∞–π–ª–∞
async function findExcelFile(
    fileNameWallpaper = '', 
    fileNameTextile = '', 
    fileNamePricelist = '',
    fileNameOracMSK = '', 
    fileNameOracSPB = '',
    fileNameVendor = ''
    ) {
    const folderPath = '/root/zak/xl';
    const files = await fs.promises.readdir(folderPath);

    for (const file of files) {

        const filePath = path.join(folderPath, file);
        const stat = await fs.promises.stat(filePath);

        if (stat.isDirectory()) {

            const result = await findExcelFile(filePath, 
                fileNameWallpaper, 
                fileNameTextile, 
                fileNamePricelist, 
                fileNameOracMSK, 
                fileNameOracSPB,
                fileNameVendor
                );

            if (result.fileNameWallpaper) {
                fileNameWallpaper = result.fileNameWallpaper;
            }
            if (result.fileNameTextile) {
                fileNameTextile = result.fileNameTextile;
            }
            if (result.fileNamePricelist) {
                fileNamePricelist = result.fileNamePricelist;
            }
            if (result.fileNameOracMSK) {
                fileNameOracMSK = result.fileNameOracMSK;
            }
            if (result.fileNameOracSPB) {
                fileNameOracSPB = result.fileNameOracSPB;
            }
            if (result.fileNameVendor) {
                fileNameVendor = result.fileNameVendor;
            }
        } else if (path.extname(file) === '.xlsx') {
            if (file.toLowerCase().includes('–∫–∞—Ç–∞–ª–æ–≥–∏_—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ_–≤_—Å–∞–ª–æ–Ω—ã_26_09_19')) {
                fileNameWallpaper = filePath;
            } else if (file.toLowerCase().includes('—Ç–µ–∫—Å—Ç–∏–ª—å_–∫–∞—Ç–∞–ª–æ–≥–∏_—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ_–≤_—Å–∞–ª–æ–Ω—ã')) {
                fileNameTextile = filePath;
            } else if (file.toLowerCase().includes('—Å–ø–∏—Å–æ–∫_–ø—Ä–∞–π—Å–ª–∏—Å—Ç–æ–≤')) {
                fileNamePricelist = filePath;
            } else if (file.toLowerCase().includes('–æ—Å—Ç–∞—Ç–∫–∏_–º—Å–∫')) {
                fileNameOracMSK = filePath;
            } else if (file.toLowerCase().includes('–æ—Å—Ç–∞—Ç–∫–∏_—Å–ø–±')) {
                fileNameOracSPB = filePath;
            } else if (file.toLowerCase().includes('—Å–ø–∏—Å–æ–∫_–ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤')) {
                fileNameVendor = filePath;
            }
        }
        if (fileNameWallpaper && 
            fileNameTextile && 
            fileNamePricelist && 
            fileNameOracMSK &&
            fileNameOracSPB && 
            fileNameVendor
            ) {
            break;
        }
    }
    return { 
        fileNameWallpaper, 
        fileNameTextile, 
        fileNamePricelist, 
        fileNameOracMSK,
        fileNameOracSPB,
        fileNameVendor
    };
}


// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞—Ä—Ç–∏–∫—É–ª–∞ ORAC
async function findOrac(chatId) {
    
    let fileNameOracMSK = '–æ—Å—Ç–∞—Ç–∫–∏_–º—Å–∫.xlsx';
    fileNameOracMSK = fileNameOracMSK.toLowerCase();
    
    let fileNameOracSPB = '–æ—Å—Ç–∞—Ç–∫–∏_—Å–ø–±.xlsx';
    fileNameOracSPB = fileNameOracSPB.toLowerCase();
    
    const resultMSK = await findExcelFile(fileNameOracMSK);
    const resultSPB = await findExcelFile(fileNameOracSPB);
    
    const filePathMSK = resultMSK.fileNameOracMSK;
    const filePathSPB = resultSPB.fileNameOracSPB;
    
    let messageORAC = '';
    
    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });
    
    if (filePathMSK) {
        try {
            
            const workbookMSK = new ExcelJS.Workbook();
            const streamMSK = fs.createReadStream(filePathMSK);
            const worksheetMSK = await workbookMSK.xlsx.read(streamMSK);
            const firstWorksheetMSK = worksheetMSK.worksheets[0];
            
            let foundMatchOracMSK = false;
            
            firstWorksheetMSK.eachRow( async (row, rowNumber) => {
                const cellValue = row.getCell('A').value; //–ê—Ä—Ç–∏–∫—É–ª
                const formatedCellValue = cellValue.toString().trim();
                const formatedUserVC = user.vendorCode.toString().trim();
                
                if (formatedCellValue === formatedUserVC) {
                    foundMatchOracMSK = true;

                    const bValue = row.getCell('B').value; //–ï–¥–µ–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
                    const cValue = row.getCell('C').value; //–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ
                    let a3Value = firstWorksheetMSK.getCell('A3').value; //–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞
                    a3Value = a3Value.toString().split( "(" )[0];
                    
                    messageORAC += `–ê—Ä—Ç–∏–∫—É–ª <b>${cellValue}</b> –∏–º–µ–µ—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ <b>${a3Value}</b>\n–≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ <b>${cValue}</b> <b>${bValue}</b>\n\n`;
                    
                    if (botMsgIdx !== null) {
                        bot.deleteMessage(chatId, botMsgIdx);
                        botMsgIdx = null;
                    }
                }
                
            });

            if (!foundMatchOracMSK) {

                if (botMsgIdx !== null) {
                    bot.deleteMessage(chatId, botMsgIdx);
                    botMsgIdx = null;
                }

                messageORAC += `–ù–∞ —Å–∫–ª–∞–¥–µ –≤ –ú–æ—Å–∫–≤–µ –∞—Ä—Ç–∏–∫—É–ª <b>${user.vendorCode}</b> –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç.\n\n`;
            }

        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePathMSK}:`, error); 
        }
    }

    if (filePathSPB) {
        try {

            const workbookSPB = new ExcelJS.Workbook();
            const streamSPB = fs.createReadStream(filePathSPB);
            const worksheetSPB = await workbookSPB.xlsx.read(streamSPB);
            const firstWorksheetSPB = worksheetSPB.worksheets[0];

            let foundMatchOracSPB = false;

            firstWorksheetSPB.eachRow( async (row, rowNumber) => {
                const cellValue = row.getCell('A').value; //–ê—Ä—Ç–∏–∫—É–ª
                const formatedCellValue = cellValue.toString().trim();
                const formatedUserVC = user.vendorCode.toString().trim();
                
                if (formatedCellValue === formatedUserVC) {
                    foundMatchOracSPB = true;
                    const cValue = row.getCell('C').value; //–ï–¥–µ–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
                    const dValue = row.getCell('D').value; //–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ
                    let a3Value = firstWorksheetSPB.getCell('A3').value; //–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞
                    a3Value = a3Value.toString().split( "(" )[0];
                    
                    messageORAC += `–ê—Ä—Ç–∏–∫—É–ª <b>${cellValue}</b> –∏–º–µ–µ—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ <b>${a3Value}</b>\n–≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ <b>${dValue}</b> <b>${cValue}</b>\n\n`;
                    
                    if (botMsgIdx !== null) {
                        bot.deleteMessage(chatId, botMsgIdx);
                        botMsgIdx = null;
                    }
                }

            });
            
            if (!foundMatchOracSPB) {
                
                if (botMsgIdx !== null) {
                    bot.deleteMessage(chatId, botMsgIdx);
                    botMsgIdx = null;
                }
                
                messageORAC += `–ù–∞ —Å–∫–ª–∞–¥–µ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ –∞—Ä—Ç–∏–∫—É–ª <b>${user.vendorCode}</b> –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç.\n\n`;
            }
            
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePathSPB}:`, error); 
        }
    }
    messageORAC += `<strong><u>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ 2 —Å–∫–ª–∞–¥–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è 1–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞, —Ç–æ –¥–µ–ª–∞–π—Ç–µ 2 –ó–ê–ö–ê–ó–ê –ü–û–°–¢–ê–í–©–ò–ö–£!!</u></strong>\n\n<strong>–í–ê–ñ–ù–û</strong>: –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å—Ä–æ–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ = –ù–ï –±–æ–ª–µ–µ 5 –º–µ—Å—è—Ü–µ–≤ (–æ—Ç –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥)\n`;
    return bot.sendMessage(chatId, messageORAC, { parse_mode: "HTML" });
    
};

//–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –æ–±–æ–µ–≤
async function findCatalogWallpaper(chatId) {

    let fileNameWallpaper = '–ö–∞—Ç–∞–ª–æ–≥–∏_—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ_–≤_—Å–∞–ª–æ–Ω—ã_26_09_19.xlsx';
    fileNameWallpaper = fileNameWallpaper.toLowerCase();
    const result = await findExcelFile(fileNameWallpaper);
    const filePath = result.fileNameWallpaper;

    if (filePath) {

        const user = await UserModel.findOne({
            where: {
              chatId: chatId
            }
        });

        try { 

            const workbook = new ExcelJS.Workbook();
            const stream = fs.createReadStream(filePath);
            const worksheet = await workbook.xlsx.read(stream);
            const firstWorksheet = worksheet.worksheets[0];

            let foundMatchWallpaper = false;

            firstWorksheet.eachRow( async (row, rowNumber) => {
                const cellValue = row.getCell('D').value;
                if (cellValue !== null) {

                    const formatedCellValue = cellValue.toString().split("/")[0].replace(/\s/g, '').toLowerCase();
                    const formatedUserCatalog = user.catalog.toString().replace(/\s/g, '').toLowerCase();
                    
                    if (formatedCellValue.includes(formatedUserCatalog)) {
                        foundMatchWallpaper = true;
                        let message = '';
                        
                        let cValue = row.getCell('C').value.toString();
                        const hValue = row.getCell('H').value;
                        const iValue = row.getCell('I').value;
                        const jValue = row.getCell('J').value;
                        const kValue = row.getCell('K').value;
                        const mValue = row.getCell('M').value;
                        const nValue = row.getCell('N').value;
                        const oValue = row.getCell('O').value;
                        const pValue = row.getCell('P').value;
                        await user.update({brand: cValue.toUpperCase()});
                        let messagePrice = await findPricelistLink(chatId, cValue);
                        
                        if (
                            hValue !== null ||
                            iValue !== null ||
                            jValue !== null ||
                            kValue !== null ||
                            mValue !== null || 
                            nValue !== null
                            ) {
                                const h1Value = firstWorksheet.getCell('H1').value;
                                const i1Value = firstWorksheet.getCell('I1').value;
                                const j1Value = firstWorksheet.getCell('J1').value;
                                const k1Value = firstWorksheet.getCell('K1').value;
                                const m1Value = firstWorksheet.getCell('M1').value;
                                const n1Value = firstWorksheet.getCell('N1').value;
                                const p1Value = firstWorksheet.getCell('P1').value;
                                const o1Value = firstWorksheet.getCell('O1').value;

                            message += `<b>${cellValue.trim()}</b> –±—Ä–µ–Ω–¥–∞ <b>${cValue.toUpperCase()}</b> –∏–º–µ–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö:\n`;
                            
                            if (hValue !== null) {
                                message += `${h1Value}: ${hValue}\n`;
                            }
                            if (iValue !== null) {
                                message += `${i1Value}: ${iValue}\n`;
                            }
                            if (jValue !== null) {
                                message += `${j1Value}: ${jValue}\n`;
                            }
                            if (kValue !== null) {
                                message += `${k1Value}: ${kValue}\n`;
                            }
                            if (mValue !== null) {
                                message += `${m1Value}: ${mValue}\n`;
                            }
                            if (nValue !== null) {
                                message += `${n1Value}: ${nValue}\n`;
                            }
                            if (pValue !== null) {
                                message += `${p1Value}: ${pValue}\n`;
                            }
                            if (oValue !== null) {
                                message += `${o1Value}: ${oValue}\n`;
                            }
                            message += `\n${messagePrice}`
                            
                            if (botMsgIdx !== null) {
                                bot.deleteMessage(chatId, botMsgIdx);
                                botMsgIdx = null;
                            }
                            await bot.sendMessage(chatId, message, beginWork3Options);
                        
                        } else {
                            if (botMsgIdx !== null) {
                                bot.deleteMessage(chatId, botMsgIdx);
                                botMsgIdx = null;
                            }
                            return bot.sendMessage(chatId, `–ö–∞—Ç–∞–ª–æ–≥–∞ –≤ —Å–∞–ª–æ–Ω–∞—Ö –Ω–µ—Ç.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Æ–ª–∏–∏ –°–∫—Ä–∏–±–Ω–∏–∫–∞ –∑–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞.\nskribnik@manders.ru\n+7 966 321-80-08\n\n${messagePrice}`, {parse_mode: 'HTML'});
                        }
                    }
                }
            });

            if (!foundMatchWallpaper) {
                return findCatalogTextile(chatId);
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ Excel:', error);
        }
    }
};

//–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–µ–∫—Å—Ç–∏–ª—è
async function findCatalogTextile(chatId) {

    let fileNameTextile = '–¢–µ–∫—Å—Ç–∏–ª—å_–ö–∞—Ç–∞–ª–æ–≥–∏_—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ_–≤_—Å–∞–ª–æ–Ω—ã.xlsx';
    fileNameTextile = fileNameTextile.toLowerCase();
    const result = await findExcelFile(fileNameTextile);
    const filePath = result.fileNameTextile;

    if (filePath) {

        const user = await UserModel.findOne({
            where: {
              chatId: chatId
            }
        });

        try { 

            const workbook = new ExcelJS.Workbook();
            const stream = fs.createReadStream(filePath);
            const worksheet = await workbook.xlsx.read(stream);
            const firstWorksheet = worksheet.worksheets[0];

            let foundMatchTextile = false;
            let message = '';

            firstWorksheet.eachRow( async (row, rowNumber) => {
                const cellValue = row.getCell('D').value;
                if (cellValue !== null) {

                    const formatedCellValue = cellValue.toString().split("/")[0].replace(/\s/g, '').toLowerCase();
                    const formatedUserCatalog = user.catalog.toString().replace(/\s/g, '').toLowerCase();
                
                    if (formatedCellValue.includes(formatedUserCatalog)) {
                        foundMatchTextile = true;
                        let message = '';

                        let cValue = row.getCell('C').value.toString();
                        const iValue = row.getCell('I').value;
                        const jValue = row.getCell('J').value;
                        const kValue = row.getCell('K').value;
                        const lValue = row.getCell('L').value;
                        const nValue = row.getCell('N').value;
                        const oValue = row.getCell('O').value;
                        const pValue = row.getCell('P').value;
                        await user.update({brand: cValue.toUpperCase()});
                        let messagePrice = await findPricelistLink(chatId, cValue);

                        if (iValue !== null ||
                            jValue !== null ||
                            kValue !== null ||
                            lValue !== null ||
                            nValue !== null || 
                            oValue !== null
                            ) {

                                const i1Value = firstWorksheet.getCell('I1').value;
                                const j1Value = firstWorksheet.getCell('J1').value;
                                const k1Value = firstWorksheet.getCell('K1').value;
                                const l1Value = firstWorksheet.getCell('L1').value;
                                const n1Value = firstWorksheet.getCell('N1').value;
                                const o1Value = firstWorksheet.getCell('O1').value;
                                const p1Value = firstWorksheet.getCell(`P1`).value;

                            message += `<b>${cellValue.trim()}</b> –±—Ä–µ–Ω–¥–∞ <b>${cValue.toUpperCase()}</b> –∏–º–µ–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö:\n`;
                            if (iValue !== null) {
                                message += `${i1Value}: ${iValue}\n`;
                            }
                            if (jValue !== null) {
                                message += `${j1Value}: ${jValue}\n`;
                            }
                            if (kValue !== null) {
                                message += `${k1Value}: ${kValue}\n`;
                            }
                            if (lValue !== null) {
                                message += `${l1Value}: ${lValue}\n`;
                            }
                            if (nValue !== null) {
                                message += `${n1Value}: ${nValue}\n`;
                            }
                            if (oValue !== null) {
                              message += `${o1Value}: ${oValue}\n`;
                            }
                            if (pValue !== null) {
                                message += `${p1Value}: ${pValue}\n`;
                            }
                            message += `\n${messagePrice}`

                            if (botMsgIdx !== null) {
                                bot.deleteMessage(chatId, botMsgIdx);
                                botMsgIdx = null;
                            }
                            await bot.sendMessage(chatId, message, beginWork3Options);
                        } else {
                            if (botMsgIdx !== null) {
                                bot.deleteMessage(chatId, botMsgIdx);
                                botMsgIdx = null;
                            }
                            return bot.sendMessage(chatId, `–ö–∞—Ç–∞–ª–æ–≥–∞ –≤ —Å–∞–ª–æ–Ω–∞—Ö –Ω–µ—Ç.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Æ–ª–∏–∏ –°–∫—Ä–∏–±–Ω–∏–∫–∞ –∑–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞.\nskribnik@manders.ru\n+7 966 321-80-08\n\n${messagePrice}`, {parse_mode: 'HTML'});
                        }
                    }
                }
            });

            if (!foundMatchTextile) {
                if (botMsgIdx !== null) {
                    bot.deleteMessage(chatId, botMsgIdx);
                    botMsgIdx = null;
                }
                return bot.sendMessage(chatId, `–ö–∞—Ç–∞–ª–æ–≥–∞ –≤ —Å–∞–ª–æ–Ω–∞—Ö –Ω–µ—Ç.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Æ–ª–∏–∏ –°–∫—Ä–∏–±–Ω–∏–∫–∞ –∑–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞.\nskribnik@manders.ru\n+7 966 321-80-08\n\n`, {parse_mode: 'HTML'});
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ Excel:', error);
        }
    }
};

//–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∞–π—Å–ª–∏—Å—Ç
async function findPricelistLink(chatId, cValue) {

    let fileNamePricelist = 'c–ø–∏—Å–æ–∫_–ø—Ä–∞–π—Å–ª–∏—Å—Ç–æ–≤.xlsx';
    fileNamePricelist = fileNamePricelist.toLowerCase();
    const result = await findExcelFile(fileNamePricelist);
    const filePath = result.fileNamePricelist;

    if (filePath) {

        const user = await UserModel.findOne({
            where: {
              chatId: chatId
            }
        });

        try { 

            const workbook = new ExcelJS.Workbook();
            const stream = fs.createReadStream(filePath);
            const worksheet = await workbook.xlsx.read(stream);
            const firstWorksheet = worksheet.worksheets[0];

            let foundMatchPricelist = false;
            let messagePrice = '';

            firstWorksheet.eachRow((row, rowNumber) => {
                const cellValue = row.getCell('B').value;
                if (cellValue !== null) {

                    const formatedCellValue = cellValue.toString().toUpperCase().replace(/[\s-]/g, '');
                    const formaterdCValue = cValue.toString().toUpperCase().replace(/[\s-]/g, '');
    
                    if (formatedCellValue.includes(formaterdCValue)) {
                        foundMatchPricelist = true;

                        const aValue = row.getCell('A').value;  // –ü–æ—Å—Ç–∞–≤—â–∏–∫
                        const bValue = row.getCell('B').value;  // –ë—Ä–µ–Ω–¥
                        const cValue = row.getCell('C').value;  // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∞–π—Å–ª–∏—Å—Ç
                        const dValue = row.getCell('D').value;
                        user.update({vendor: aValue.toUpperCase()});
                        if (dValue !== null) {
                        user.update({vendorEmail: dValue.toLowerCase()});
                        }

    
                        if (cValue !== null ) {
                            const formattedCValue = cValue.toString().replace(/\\/g, '\\');
                            messagePrice += `–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É —Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º –±—Ä–µ–Ω–¥–∞ <b>${bValue.toUpperCase()}</b> –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ <b>${aValue.toUpperCase()}</b>:<pre>${formattedCValue}</pre>`;
                        } else {
                            messagePrice += `–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –≤ –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –ª–µ–∂–∏—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –±—Ä–µ–Ω–¥–∞ <b>${bValue.toUpperCase()}</b> –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ <b>${aValue.toUpperCase()}</b>.üò¢\n–ó–∞–ø—Ä–æ—Å–∏—Ç–µ –ø—Ä–∞–π—Å—ã –≤ –æ—Ç–¥–µ–ª–µ –∑–∞–∫—É–ø–æ–∫.`
                        }
                    }
                }
            });

            if (!foundMatchPricelist) {
                messagePrice += `–ü—Ä–∞–π—Å-–ª–∏—Å—Ç –ø–æ –±—Ä–µ–Ω–¥—É <b>${user.brand}</b> –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω.\n–ó–∞–ø—Ä–æ—Å–∏—Ç–µ –ø—Ä–∞–π—Å—ã –≤ –æ—Ç–¥–µ–ª–µ –∑–∞–∫—É–ø–æ–∫.`;
            }

            return messagePrice;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ Excel:', error);
        }
    }
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –±—Ä–µ–Ω–¥—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–æ–∫–∏ –∏ –µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
// async function findVendor(chatId) {

//     let fileNameVendor = '—Å–ø–∏—Å–æ–∫_–ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤.xlsx';
//     fileNameVendor = fileNameVendor.toLowerCase();

//     const result = await findExcelFile(fileNameVendor);
//     const filePath = result.fileNameVendor;

//     const user = await UserModel.findOne({
//         where: {
//             chatId: chatId
//         }
//     });

//     if (filePath) {
//         try {

//             const workbook = new ExcelJS.Workbook();
//             const stream = fs.createReadStream(filePath);
//             const worksheet = await workbook.xlsx.read(stream);
//             const firstWorksheet = worksheet.worksheets[0];

//             let foundMatchBrand = false;

//             firstWorksheet.eachRow( async (row, rowNumber) => {
//                 const cellValue = row.getCell('C').value; // –ë—Ä–µ–Ω–¥
//                 if (cellValue !== null) {
//                     const formatedCellValue = cellValue.toString().trim();
//                     const formatedUserBrand = user.brand.toString().trim();

//                     if (formatedCellValue.toLowerCase() === formatedUserBrand.toLowerCase()) {
//                         foundMatchBrand = true;

//                         const dValue = row.getCell('D').value; // –ü–æ—Å—Ç–∞–≤—â–∏–∫
//                         user.update({vendor: dValue.toUpperCase()});
//                         console.log ( `–ü–æ—Å—Ç–∞–≤—â–∏–∫ –±—Ä–µ–Ω–¥–∞ ${user.brand} = ${user.vendor}`);

//                     }
//                 }
//                 return;

//             });

//         } catch (e) {
//             return bot.sendMessage(chatId, `–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePath}.`)
//         }
//     }
// };

//–°–¢–ê–†–¢ –†–ê–ë–û–¢–´ –ü–†–û–ì–†–ê–ú–ú–´=============================================================================================================

const start = async () => {
    console.log('–ë–æ—Ç –∑–∞–ø—â—É–µ–Ω...')

    try {
        await sequelize.authenticate();
        await sequelize.sync();
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ');
    } catch(err) {
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–º–∞–ª–æ—Å—å', err);
    }

//—Å–ª—É—à–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥======================================================================================

//—Å—Ç–∞—Ä—Ç
bot.onText(/\/start/, async msg => {
    const chatId = msg.chat.id;

    try {

        let user = await UserModel.findOne({
            where: {
                chatId: chatId
            }
        });

        //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if (user) {
            lc = null;
            return bot.sendMessage(
                chatId, 
                `–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.nickname}!\n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,\n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`
            );

        } else if (password === 'true') {
            user = await UserModel.create({chatId});
            console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${msg.from.first_name} ${msg.from.last_name}`);
             await user.update({
                firstName: msg.from.first_name, 
                lastName: msg.from.last_name, 
            });
            lc = '/editNickname';
            return bot.sendMessage(
                chatId, 
                `–ü—Ä–∏–≤–µ—Çc—Ç–≤—É—é, ${msg.from.first_name}! –ú–µ–Ω—è –∑–æ–≤—É—Ç –±–æ—Ç –ó–∞–∫.\n–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!\n–Ø –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ —Ç–µ–∫—Å—Ç–∏–ª—è –∏ –æ–±–æ–µ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, –ø–æ–∫–∞–∑–∞—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ORAC –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö –≤ –ú–°–ö –∏ –°–ü–ë, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ø–æ–∏—Å–∫ –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –û–ü–£–°, –∞ —Ç–∞–∫ –∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤ –≤–∏–¥–µ –µ-–º–µ–π–ª–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ, —Å—Ä–æ–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏ –∏ —Ä–µ–∑–µ—Ä–≤ –ø–æ –º–Ω–æ–≥–∏–º —Ä–æ—Å—Å–∏–π—Å–∫–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º.\n–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?`
            );
        } else if (password !== 'true') {
            password = false;
            return bot.sendMessage(
                chatId, 
                `–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:`
            );
        }
     } catch (e) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', e);
    }

},

bot.onText(/\/game/, async msg => {
    const chatId = msg.chat.id;

    lc = '/game';
    const randomNumber = Math.floor(Math.random() * 10)
    chats[chatId] = randomNumber;
    return bot.sendMessage(
        chatId, 
        `–û—Ç–≥–∞–¥–∞–π —á–∏—Å–ª–æüòè`, 
        gameOptions
    );
}),

bot.onText(/\/x/, async msg => {
    const chatId = msg.chat.id;
    lc = null; 

    })
);

//—Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π==========================================================================================
bot.on('message', async msg => {
    const text = msg.text;
    const chatId = msg.chat.id;

    console.log(msg)

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });

    try {

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
        if (password === false) {
            if (text === '111QWER!!!') {
                password = 'true';
                return bot.emit('text', { text: '/start', chat: { id: chatId } });
            } else {
                return bot.sendMessage(
                    chatId, 
                    `–í –¥–æ—Å—Ç—É–ø–µ –æ—Ç–∫–∞–∑–∞–Ω–Ω–æ.`
                );
            }
        };

        //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if (text === '/mainmenu') {

            if (user) {
                lc = null;
                await bot.sendMessage(
                    chatId, 
                    `–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.nickname}!\n–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π id: ${chatId}\n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,\n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`
                );
            }
            return;
        }

        //–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
        if (text === '/beginwork') {
            backLc = text;
            if (!user.email) {
                await editEmail(chatId);
            } else {
                await bot.sendMessage(
                    chatId, 
                    '–ß–µ–º –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?', 
                    workOptions
                );
            } 
            return; 
        }

        //–∏–∑–º–µ–Ω–∏—Ç—å e-mail
        if (text === '/editEmail') {
            return editEmail(chatId);
        }

        //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º e-mail –≤ —è—á–µ–π–∫—É –ë–î
        if (lc === '/editEmail') {
            await user.update({email: text.toLowerCase()});
            return bot.sendMessage(
                chatId, 
                `–í–∞—à e-mail "<b>${user.email}</b>" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω\n<i>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ e-mail –ø–æ–≤—Ç–æ—Ä–Ω–æ)</i>`, 
                beginWorkOptions
            );
        }            

        //–∏–∑–º–µ–Ω–∏—Ç—å Nickname
        if (text === '/editNickname') {
            return editNickname(chatId);
        }

        //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º Nickname –≤ —è—á–µ–π–∫—É –ë–î
        if (lc === '/editNickname') {
            await user.update({nickname: text});
            return bot.sendMessage(
                chatId, 
                `–•–æ—Ä–æ—à–æ, "<b>${user.nickname}</b>", —è –∑–∞–ø–æ–º–Ω—é.\n<i>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–≤—Ç–æ—Ä–Ω–æ)</i>`, 
                mainMenuOptions
            );
        }

        //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ –≤ —è—á–µ–π–∫—É –ë–î
        if (lc === '/enterBrand') {
            await user.update({brand: text.toUpperCase()});
            return bot.sendMessage(
                chatId, 
                `–ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ "<b>${text}</b>" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ\n<i>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ)</i>`, 
                VCOptions
            );
        }

        //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª –≤ —è—á–µ–π–∫—É –ë–î –∏ –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –Ω–∞ —Å–∞–π—Ç–µ\–æ—Ç–ø—Ä–∞–≤–∫—É –µ–º–µ–π–ª–∞
        if (lc === '/enterVC') {
            await user.update({vendorCode: text.toUpperCase()});
            await bot.sendMessage(chatId, '–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ . . .');
            const formatedUserVendor = user.vendor.replace(/[\s-]/g, '');
            botMsgIdx = msg.message_id += 1; 

            if (formatedUserVendor === '–û–ü–£–°') {
                return startFind(chatId);
            } else {
                lc = '/enterNumberofVC';
                bot.deleteMessage(chatId, botMsgIdx);
                return bot.sendMessage(
                    chatId,
                    `–•–æ—Ä–æ—à–æ!\n<b>–ò—Å–∫–æ–º—ã–µ –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n–ë—Ä–µ–Ω–¥: ${user.brand}\n–ü–æ—Å—Ç–∞–≤—â–∏–∫: ${user.vendor}\n–ê—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:\n<i>–≤–≤–µ–¥–∏—Ç–µ —Ç–∞–∫ –∂–µ –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n11 <b>—à—Ç</b> –∏–ª–∏ 3 <b>–º.–ø.</b></i>`,
                    {parse_mode: 'HTML'}
                );
            }
        }

        //–í–≤–æ–¥–∏—Ç—Å—è –ü–∞—Ä—Ç–∏—è –∏ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–∞ –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –û–ü–£–°
        if (lc === '/enterReserveNumber') {
            await user.update({reserveNumber: text});

            if ((user.reserveNumber) !== (user.reserveNumber.split(" ")[0])) {
                return bot.sendMessage(
                    chatId, 
                    `–í—ã –∂–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–∏—é <b>${user.reserveNumber.split(" ")[0]}</b> –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ <b>${user.reserveNumber.split(" ")[1]}</b> —à—Ç?\n<i>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ)</i>`, 
                    enterReserveNumberOptions
                );
            } else {
                return bot.sendMessage(
                    chatId, 
                    `–í—ã –∂–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å  <b>${user.vendorCode}</b> –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ <b>${user.reserveNumber}</b> —à—Ç?\n<i>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ)</i>`, 
                    enterReserveNumberOptions
                );
            }
        }

        if (lc === '/enterNumberofVC') {
            lc = null;
            await user.update({reserveNumber: text});
            return bot.sendMessage(
                chatId, 
                `–û—Ç–ª–∏—á–Ω–æ!\n<b>–ò—Å–∫–æ–º—ã–µ –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n–ë—Ä–µ–Ω–¥: ${user.brand}\n–ü–æ—Å—Ç–∞–≤—â–∏–∫: ${user.vendor}\n–ê—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}\n–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ: ${user.reserveNumber}\n\n–•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å —è –º–æ–≥—É –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∏ —Å—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏.\n–ù—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤?`, 
                startFind2Options);
            }
            
            //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª –∫–∞—Ç–∞–ª–æ–≥–∞
            if (lc === '/catalog–°heck') {
                await user.update(
                    {catalog: text}
                    );
                    await bot.sendMessage(chatId, '–ò–¥—ë—Ç –ø–æ–∏—Å–∫ –∫–∞—Ç–∞–ª–æ–≥–∞ . . .');
                    botMsgIdx = msg.message_id += 1; 
                    return findCatalogWallpaper(chatId);
                }
                
                if (lc === '/orac–°heck') {
                    await user.update(
                        {vendorCode: text.toUpperCase()}
                        );
                        await bot.sendMessage(chatId, `–ò–¥—ë—Ç –ø–æ–∏—Å–∫ ${text} . . .`);
                        botMsgIdx = msg.message_id += 1; 
                        return findOrac(chatId);
                    }
                    
                    //–≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        if (text === '/infowork') {
            return bot.sendMessage(
                chatId, 
                `${user.nickname} –≤–æ—Ç, —á—Ç–æ –≤—ã –∏—Å–∫–∞–ª–∏:\n\n–ö–∞—Ç–∞–ª–æ–≥: ${user.catalog}\n–ë—Ä–µ–Ω–¥: ${user.brand}\n–ü–æ—Å—Ç–∞–≤—â–∏–∫: ${user.vendor}\n–ê—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}\n–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ: ${user.reserveNumber}\n\n–í–∞—à email: ${user.email}`
            );
        }

        if (text === '/infogame') {
            lc = null;
            return bot.sendMessage(
                chatId, 
                `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.right}"\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.wrong}"`, resetOptions
            );
        }   

        if (text.toLowerCase().includes('–ø—Ä–∏–≤–µ—Ç')) {
            return bot.sendSticker(
                chatId, 
                'https://cdn.tlgrm.app/stickers/087/0cf/0870cf0d-ec03-41e5-b239-0eb164dca72e/192/1.webp'
            );
        }

        if ( (text !== '/game' && text !== '/start') || (lc ==='/catalog–°heck') || (lc === '/orac–°heck') ) {
            return bot.sendSticker(
                chatId, 
                'https://tlgrm.ru/_/stickers/ccd/a8d/ccda8d5d-d492-4393-8bb7-e33f77c24907/12.webp'
            );
        }

    } catch (e) {
        console.log('–°—Ä–∞–±–æ—Ç–∞–ª —Å–ª—É—à–∞—Ç–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.', e)
    }


}) 
//–°–õ–£–®–ê–¢–ï–õ–¨ –î–û–ö–£–ú–ï–ù–¢–û–í========================================================================================================================================

bot.on('message', async msg => {

    try {
        const file_name = msg.document.file_name;
        const chatId = msg.chat.id;

        if (msg.document) {
            if (file_name.toLowerCase().includes('–∫–∞—Ç–∞–ª–æ–≥–∏') ||
                file_name.toLowerCase().includes('–ø—Ä–∞–π—Å–ª–∏—Å—Ç–æ–≤')
                ) {
            
                await bot.getFile(msg.document.file_id).then((file) => {
                    let fileName = msg.document.file_name;
                    fileName = fileName.toLowerCase();
                    fileName = fileName.replace(/\s/g, '_');
                    const fileStream = bot.getFileStream(file.file_id);
                    
                    fileStream.pipe(fs.createWriteStream(`/root/zak/xl/${fileName}`));
                    
                    fileStream.on('end', () => {
                        bot.sendMessage(
                            chatId, 
                            `–§–∞–π–ª <b>${fileName}</b>\n—É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.`, 
                            {parse_mode: 'HTML'
                        });
                    });
                });
                return;

            } else if (file_name.toLowerCase().includes('–ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤') || 
                        file_name.toLowerCase().includes('–æ—Å—Ç–∞—Ç–∫–∏')
                    ) {

                await bot.getFile(msg.document.file_id).then((file) => {
                    let fileName = msg.document.file_name;
                    fileName = fileName.toLowerCase();
                    fileName = fileName.replace(/\s\d+|\.\d+/g, '');
                    fileName = fileName.replace(/\s/g, '_');
                    const fileStream = bot.getFileStream(file.file_id);
                    
                    fileStream.pipe(fs.createWriteStream(`/root/zak/xl/${fileName}`));
                    
                    fileStream.on('end', () => {
                        bot.sendMessage(
                            chatId, 
                            `–§–∞–π–ª <b>${fileName}</b>\n—É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.`, 
                            {parse_mode: 'HTML'}
                        );
                    });
                });
                return;

            } else {
                return bot.sendMessage(
                    chatId, 
                    `–í —Ü–µ–ª—è—Ö —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏, —è —Å–æ—Ö—Ä–∞–Ω—è—é –ª–∏—à—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —ç–∫—Å–µ–ª—å —Ñ–∞–π–ª—ã\n–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ, —á—Ç–æ–±—ã —è –Ω–∞—É—á–∏–ª—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–∞—à–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\nn_kharitonov@mander.ru`
                );
            }
        }
    } catch {
        console.log('C—Ä–∞–±–æ—Ç–∞–ª —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π.')
    }

});

//—Å–ª—É—à–∞—Ç–µ–ª—å –∫–æ–ª–±—ç–∫–æ–≤==========================================================================================================================================

bot.on('callback_query', async msg => {
    const data = msg.data;
    const chatId = msg.message.chat.id;

    console.log(msg)

    //—Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    const startGame = async (chatId) => {
        const randomNumber = Math.floor(Math.random() * 10)
        chats[chatId] = randomNumber;
        return bot.sendMessage(
            chatId, 
            `–û—Ç–≥–∞–¥—ã–≤–∞–π:`, 
            gameOptions
        );
    }

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });

    try {

    //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é 
    if (data === '/mainmenu') {
        if (lc === '/game' || lc === '/again' || lc === '/reset') {
            await bot.deleteMessage(
                chatId, 
                msg.message.message_id
            );
        }
        lc = null;
        return bot.sendMessage(
            chatId, 
            `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, ${user.nickname}\n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,\n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`); 
    }

    //–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ –±—Ä–µ–Ω–¥—É
    if (data === '/checkVendor') {
        lc = '/enterVC';
        const formatedUserVendor = user.vendor.replace(/[\s-]/g, '');

        if (formatedUserVendor.includes('–ë–õ–ê–ì–û–î–ê–¢–¨') ||
            formatedUserVendor.includes('–î–ï–ö–û–†–¢–†–ï–ô–î') ||
            formatedUserVendor.includes('HUGGE') ||
            formatedUserVendor.includes('MILASSA') ||
            formatedUserVendor.includes('RACH MARBURG') ||
            formatedUserVendor.includes('–ê–í–¢') ||
            formatedUserVendor.includes('–ë–ê–£–¢–ï–ö–°') ||
            formatedUserVendor.includes('–ë–ï–ö–ê–†–¢–¢–ï–ö–°–¢–ò–õ–¨') ||
            formatedUserVendor.includes('–ì–õ–û–ë–ê–õ–¢–ï–ö–°') ||
            formatedUserVendor.includes('–î–ï–ö–û–†–†–£–°') ||
            formatedUserVendor.includes('–ö–û–ù–¢–†–ê–ö–¢ –ü–õ–Æ–°') ||
            formatedUserVendor.includes('–õ–ï–í–ê–ù–¢–ò–ù') ||
            formatedUserVendor.includes('–ü–†–û–¢–û–°') ||
            formatedUserVendor.includes('–û–î–ò–ó–ê–ô–ù') ||
            formatedUserVendor.includes('–†–û–ë–ï–†–¢–°') ||
            formatedUserVendor.includes('–†–£–ê–õ–¨–Ø–ù–°') ||
            formatedUserVendor.includes('–õ–û–ô–ú–ò–ù–ê') ||
            formatedUserVendor.includes('–Æ–ì–ê–†–¢')
        ) {
            return bot.sendMessage(
                chatId, 
                `–¢–∞–∫ –∫–∞–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –∏—Å–∫–æ–º–æ–≥–æ –≤–∞–º–∏ –±—Ä–µ–Ω–¥–∞ <b>${user.brand}</b> —è–≤–ª—è–µ—Ç—Å—è <b>${user.vendor}</b>, —Ç–æ —è –º–æ–≥—É –∑–∞–ø—Ä–æ—Å–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏, —É—Ç–æ—á–Ω–∏—Ç—å —Å—Ä–æ–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–µ–∑–µ—Ä–≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –≤–∞—Å –ø–æ–∑–∏—Ü–∏–∏.\n–ö–∞–∫–æ–π –∞—Ä—Ç–∏–∫—É–ª –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤–∞–º –Ω—É–∂–µ–Ω?`,
                {parse_mode: 'HTML'}
            );
        } else if (formatedUserVendor.includes('–û–ü–£–°')) {
            return bot.sendMessage(
                chatId, 
                `–¢–∞–∫ –∫–∞–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –∏—Å–∫–æ–º–æ–≥–æ –≤–∞–º–∏ –±—Ä–µ–Ω–¥–∞ <b>${user.brand}</b> —è–≤–ª—è–µ—Ç—Å—è <b>${user.vendor}</b>, —Ç–æ —è –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–µ–∑–µ—Ä–≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –≤–∞—Å –ø–æ–∑–∏—Ü–∏–∏.\n–ö–∞–∫–æ–π –∞—Ä—Ç–∏–∫—É–ª –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤–∞–º –Ω—É–∂–µ–Ω?`,
                {parse_mode: 'HTML'}
            );
        } else {
            return bot.sendMessage(
                chatId, 
                `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –µ—â–µ –Ω–µ –∑–Ω–∞—é –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º <b>${user.vendor}</b>.\n–ù–æ —è –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ —Å —Å–∞–π—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –û–ü–£–°, –∞ —Ç–∞–∫ –∂–µ, –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –º–Ω–æ–≥–∏–º —Ä–æ—Å—Å–∏–π—Å–∫–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º –æ –Ω–∞–ª–∏—á–∏–∏, —Å—Ä–æ–∫–∞—Ö –∏ —Ä–µ–∑–µ—Ä–≤–∞—Ö.`,
                {parse_mode: 'HTML'}
            );
        }
            
    }

    //–≤–≤–æ–¥ –±—Ä–µ–Ω–¥–∞ 
    if(data === '/enterBrand') {
        lc = data;

        return bot.sendMessage(
            chatId, `–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ø–æ–∏—Å–∫:`, 
            {parse_mode: 'HTML'}
        );
    }

    //–≤–≤–æ–¥ –∞—Ä—Ç–∏–∫—É–ª–∞ 
    if(data === '/enterVC') {
        lc = data;
        cValue = user.brand;
        let messagePrice =await findPricelistLink(chatId, cValue);
        return bot.sendMessage(
            chatId, `–ü–æ–Ω—è–ª, –ø—Ä–∏–Ω—è–ª\n<b>–ò—Å–∫–æ–º—ã–µ –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n–ë—Ä–µ–Ω–¥: ${user.brand}\n${messagePrice}\n\n–í–≤–µ–¥–∏—Ç–µ –∏—Å–∫–æ–º—ã–π –∞—Ä—Ç–∏–∫—É–ª:\n`, 
            {parse_mode: 'HTML'}
        );
    }
    
    //–Ω–∞—á–∞–ª–æ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    if (data === '/enterReserveNumber') {
        lc = data;
        return bot.sendMessage(
            chatId, `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–∞—Ä—Ç–∏–∏ –∏ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å:<i>–Ω–∞–ø—Ä–∏–º–µ—Ä: 268–ê 3\n–µ—Å–ª–∏ –ø–∞—Ä—Ç–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ</i>`,
            { parse_mode: "HTML" }
        );
    }

    //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    if (data === '/preSendEmail') {
        lc = data;
        if ((user.reserveNumber) !== (user.reserveNumber.split(" ")[0])) {

            subject = `–†–µ–∑–µ—Ä–≤ ${user.vendorCode}, –ø–∞—Ä—Ç–∏—è: ${user.reserveNumber.split(" ")[0]}, ${user.reserveNumber.split(" ")[1]} —à—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É ${chatId}`;
            textMail = `\n\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–ü—Ä–æ—Å—å–±–∞ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ —Ä–µ–∑–µ—Ä–≤ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é: \n–∞—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}, –±—Ä–µ–Ω–¥: ${user.brand}, –ø–∞—Ä—Ç–∏—è: ${user.reserveNumber.split(" ")[0]} –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ: ${user.reserveNumber.split(" ")[1]} —à—Ç.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º –Ω–∞ purchasing_internal@manders.ru.`;
        
        } else {

            subject = `–†–µ–∑–µ—Ä–≤ ${user.vendorCode},  ${user.reserveNumber} —à—Ç, –ø–æ –∑–∞–ø—Ä–æ—Å—É ${chatId}`;
            textMail = `\n\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–ü—Ä–æ—Å—å–±–∞ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ —Ä–µ–∑–µ—Ä–≤ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é: \n–∞—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}, –±—Ä–µ–Ω–¥: ${user.brand}, –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ: ${user.reserveNumber} —à—Ç.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º –Ω–∞ purchasing_internal@manders.ru.`;
        
        }
        return bot.sendMessage(
            chatId, 
            `–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –µ–º–µ–π–ª:\n–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: <strong>${subject}</strong>\n–ö–æ–º—É: <b>${user.vendorEmail}</b>\n–ö–æ–ø–∏—è: <b>${user.email}</b>\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n"${textMail}"\n\n<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ ${user.email}.</i>`, sendReserveOptions);
    }

    if (data === '/preSendEmailReserveYes') {

        subject = `–ù–∞–ª–∏—á–∏–µ+—Å—Ä–æ–∫–∏+—Ä–µ–∑–µ—Ä–≤ ${user.vendorCode},  ${user.reserveNumber}, –ø–æ –∑–∞–ø—Ä–æ—Å—É ${chatId}`;
        textMail = `\n\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ª–∏—á–∏–µ –∏ —Å—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏:\n–∞—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}, –±—Ä–µ–Ω–¥: ${user.brand}, –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ: ${user.reserveNumber} —à—Ç.\n–ü—Ä–æ—Å—å–±–∞ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ —Ä–µ–∑–µ—Ä–≤.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º –Ω–∞ purchasing_internal@manders.ru.`;
        
        return bot.sendMessage(
            chatId, 
            `–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –µ–º–µ–π–ª:\n–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: <strong>${subject}</strong>\n–ö–æ–º—É: <b>${user.vendorEmail}</b>\n–ö–æ–ø–∏—è: <b>${user.email}</b>\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n${textMail}\n\n<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ ${user.email}.</i>`,
            sendReserveOptions
        );
    }

    if (data === '/preSendEmailReserveNo') {

        subject = `–ù–∞–ª–∏—á–∏–µ+—Å—Ä–æ–∫–∏ ${user.vendorCode},  ${user.reserveNumber}, –ø–æ –∑–∞–ø—Ä–æ—Å—É ${chatId}`;
        textMail = `\n\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ª–∏—á–∏–µ –∏ —Å—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏:\n–∞—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}, –±—Ä–µ–Ω–¥: ${user.brand}, –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ: ${user.reserveNumber} —à—Ç.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º –Ω–∞ purchasing_internal@manders.ru.`;
        
        return bot.sendMessage(
            chatId, 
            `–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –µ–º–µ–π–ª:\n–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: <strong>${subject}</strong>\n–ö–æ–º—É: <b>${user.vendorEmail}</b>\n–ö–æ–ø–∏—è: <b>${user.email}</b>\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n${textMail}\n\n<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ ${user.email}.</i>`, 
            sendReserveOptions
        );

    }

    //–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    if (data === '/sendReserveEmail') {
        lc = data;
        return sendReserveEmail(chatId);
    }

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ –Ω–∞–ª–∏—á–∏–∏ –≤ —Å–∞–ª–æ–Ω–µ
    if(data === '/catalog–°heck') {
        lc = data;
        return bot.sendMessage(
            chatId, 
            '–í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞</b> —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –∏—Å–∫–æ–º—ã–π –≤–∞–º–∏ —Ç–æ–≤–∞—Ä:\n<i>(–ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞)</i>', 
            {parse_mode: 'HTML'}
        );
    }

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞—Ä—Ç–∏–∫—É–ª–∞ ORAC –≤ —Å–∞–ª–æ–Ω–µ
    if(data === '/orac–°heck') {
        lc = data;
        return bot.sendMessage(
            chatId, 
            '–í–≤–µ–¥–∏—Ç–µ –∏—Å–∫–æ–º—ã–π –≤–∞–º–∏ <b>–∞—Ä—Ç–∏–∫—É–ª</b> —Ç–æ–≤–∞—Ä–∞ ORAC :\n<i>(–ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞)</i>', 
            {parse_mode: 'HTML'}
        );
    }

    //–ø—Ä–µ–≤—å—é —Ñ–æ—Ç–æ
    if(data === '/work2') {
        lc = null;
        return bot.sendMessage(
            chatId, 
            sorry, 
            mainMenuOptions
        );
    }

    //–¥–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑
    if(data === '/work3') {
        lc = null;
        return bot.sendMessage(
            chatId, 
            sorry, 
            mainMenuOptions
        );
    }

    //–¥–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑
    if(data === '/request1C') {
        lc = null;
        return bot.sendMessage(
            chatId, 
            startRequest1C(chatId), 
            mainMenuOptions
        );
    }


    //—Ä–µ—Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã
    if (data === '/again') {
        lc = data;
        await bot.deleteMessage(
            chatId, 
            msg.message.message_id
        );
        return startGame(chatId);
    }

    //—Ä–µ—Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã
    if (data === '/infogame') {
        lc = data;
        await bot.deleteMessage(
            chatId, 
            msg.message.message_id
        );
        return bot.sendMessage(
            chatId, 
            `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.right}"\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.wrong}"`, 
            resetOptions
        ); 
    }

    //—Å–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã
    if(data === '/reset') {
        lc = data;
        await bot.deleteMessage(
            chatId, 
            msg.message.message_id
        );
        if (user) {
            await user.update ({
                right: 0,
                wrong: 0,
            });
        }

        return bot.sendMessage(
            chatId, 
            `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã —Å–±—Ä–æ—à–µ–Ω–Ω—ã:\n–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ${user.right},\n–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ${user.wrong}`, 
            againOptions
        );
    }

    //–∑–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã –≤ –ë–î
    if (lc === '/game' || lc === '/again') {
        if (data == chats[chatId]) {
            user.right += 1;
            await user.save(chatId);
            await bot.deleteMessage(
                chatId, 
                msg.message.message_id
            );
            return bot.sendMessage(
                chatId, 
                `–¢—ã –æ—Ç–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É "${chats[chatId]}"`, 
                againOptions
            );
        } else {
            user.wrong += 1;
            await user.save();
            await bot.deleteMessage(
                chatId, 
                msg.message.message_id
            );
            return bot.sendMessage(
                chatId, 
                `–ù–µ—Ç, —è –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É "${chats[chatId]}"`, 
                againOptions
            );  
        }
    }

    } catch (err) {      
        return bot.sendMessage(
            chatId, 
            '–û—à–∏–±–∫–∞ –≤ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç–µ–ª—è –∫–æ–ª–±—ç–∫–æ–≤', 
            err
        );
    }

})

}

start();