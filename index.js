const TelegramApi = require('node-telegram-bot-api');
const axios = require('axios');
const cheerio = require('cheerio');
const path = require('path');
const fs = require('fs');
const ExcelJS = require('exceljs');
const token = '6076442091:AAGUxzIT8C7G7_hx4clixZpIi0Adtb2p2MA';
const bot = new TelegramApi(token, {
    polling: {
        interval: 300, //–º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Ç–≥ "–º–ª—Å–µ–∫"
        autoStart: true, //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        params: {
            timeout:10 //—Ç–∞–π–º–∞—É—Ç –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ "–º–ª—Å–µ–∫"
        }
    }
});

//–ò–ú–ü–û–†–¢–´
const {gameOptions, againOptions, resetOptions,
     workOptions, VCOptions, startFindOptions, 
     beginWorkOptions, beginWork2Options, mainMenuOptions, 
     enterReserveNumberOptions, sendReserveOptions, beginWork3Options} = require('./options');
const sequelize = require('./db');
const UserModel = require('./models');
const {transporter, recipient} = require('./nodemailer');
const clientRDP = require('./rdp');
//const BrandModel = require('./models');

//–ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
chats = {};
lc = {};    //–ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
plc = {};   //–ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
botMsgIdx = {};    //–∞–π–¥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
sorry = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è —ç—Ç–æ–º—É –ø–æ–∫–∞ –µ—â—ë —É—á—É—Å—åüòÖ\n–ü—Ä–æ—à—É –≤–∞—Å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å –¥–∞–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º –∫\npurchasing_internal@manders.ru';
let subject = {};   //—Ç–µ–º–∞ –ø–∏—Å—å–º–∞
let textMail = {};  //—Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞




//–ú–ï–ù–Æ –ö–û–ú–ê–ù–î
bot.setMyCommands([
    {command: '/mainmenu', description:'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'},
    {command: '/beginwork', description:'–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã'},
    {command: '/infowork', description:'–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤'},
])


//–§–£–ù–ö–¶–ò–ò=========================================================================================

//—Ñ—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞ –µ–º–µ–π–ª–∞
const editEmail = async (chatId) => {
    lc = '/editEmail'
    return bot.sendMessage(chatId, `–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –í–∞—à —Ä–∞–±–æ—á–∏–π e-mail:`)
}

//—Ñ—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞
const editNickname = async (chatId) => {
    lc = '/editNickname'
    return bot.sendMessage(chatId, `–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –í–∞—à –Ω–∏–∫–Ω–µ–π–º:`)
}

//—Ñ—É–Ω–∫—Ü–∏—è html –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –¥–∞–Ω–Ω—ã–º –∏–∑ –ë–î
const startFind = async (chatId) => {
    lc = '/enterVC';

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });

    try {

        //—Ñ–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø–æ–∏—Å–∫–∞
        const searchUrl = `https://opusdeco.ru/search/?type=catalog&q=${user.brand}+${user.vendorCode}`;
        console.log('—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞ —Å—Å—ã–ª–∫–∞');

        //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç
        const response = await axios.get(searchUrl);
        const $ = cheerio.load(response.data);
        console.log('–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');

        //–°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –∏–∑ –ø–æ–∏—Å–∫–∞ 
        const firstProductLink = $('h3.item__card__title.card-product-general__title.mb-2 a').attr('href');

        if (firstProductLink) {
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
            const productResponse = await axios.get(`https://opusdeco.ru${firstProductLink}`);
            const $$ = cheerio.load(productResponse.data);
            console.log('—É—Å–ø–µ—à–Ω–æ –∑–∞—à—ë–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞');
            
            // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã
            let availabilityContent = ``;
            // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
            let expectedArrivalContent = ``;

            const modalBody = $$('#stockAvailabilityModal .modal-body');
            // –ù–∞—Ö–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É —Å –Ω–∞–ª–∏—á–∏–µ–º —Ç–æ–≤–∞—Ä–∞
            const availabilityTable = modalBody.find('table').eq(0);
            // –ù–∞—Ö–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
            const expectedArrivalTable = modalBody.find('table').eq(1);
            // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–∞
            const rowsValueAV = availabilityTable.find('tbody tr');
            // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
            const rowsValueEX = expectedArrivalTable.find('tbody tr');


            //–ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞
            availabilityTable.each((index, row) => {

                const rowsNames = $$(row).find('thead tr');
                const names = $$(rowsNames).find('th[scope=col]');
                
                rowsValueAV.each((index, rowValue) => {
                    const cells = $$(rowValue).find('td');
                
                // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
                availabilityContent += '–ù–∞–ª–∏—á–∏–µ –Ω–∞ —Å–∫–ª–∞–¥–µ:\n';
                availabilityContent += `${$$(names[0]).text()}: <pre>${$$(cells[0]).text()}</pre>\n`;
                availabilityContent += `${$$(names[1]).text()}: ${$$(cells[1]).text()}\n`;
                availabilityContent += `${$$(names[2]).text()}: ${$$(cells[2]).text()}\n`;
                availabilityContent += `${$$(names[3]).text()}: ${$$(cells[3]).text()}\n\n`;
            });
        });

            //–ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–±–ª–∏—Ü—É 
            expectedArrivalTable.each((index, row) => {
                
                const rowsNames = $$(row).find('thead tr');
                const names = $$(rowsNames).find('th[scope=col]');

                rowsValueEX.each((index, rowValue) => {
                    const cells = $$(rowValue).find('td');
                
                // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
                expectedArrivalContent += `–û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ:\n`;
                expectedArrivalContent += `${$$(names[0]).text()}: <pre>${$$(cells[0]).text()}</pre>\n`;
                expectedArrivalContent += `${$$(names[1]).text()}: ${$$(cells[1]).text()}\n`;
                expectedArrivalContent += `${$$(names[2]).text()}: ${$$(cells[2]).text()}\n`;
                expectedArrivalContent += `${$$(names[3]).text()}: ${$$(cells[3]).text()}\n\n`;
            });
        });

            await bot.deleteMessage(chatId, botMsgIdx);
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            if (availabilityTable.length === 0) {

                if (expectedArrivalTable.length === 1) {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö —Ç–æ–≤–∞—Ä–∞
                    bot.sendMessage(chatId, `${expectedArrivalContent}`, startFindOptions);
                    console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å–≤–∏–∏ –Ω–∞–ª–∏—á–∏—è, —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
                    return;

                } else {

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–æ–≤–∞—Ä–∞
                    bot.sendMessage(chatId, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', startFindOptions);
                    console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–æ–≤–∞—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞');
                    return;
                }
            }
                
            if (expectedArrivalTable.length === 0) {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–∞
                bot.sendMessage(chatId, `${availabilityContent}`, startFindOptions);
                console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ª–∏—á–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
                return;
            }
            
            if (availabilityTable !== expectedArrivalTable) {
            bot.sendMessage(chatId, `${availabilityContent}${expectedArrivalContent}`, startFindOptions);
            console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ª–∏—á–∏–∏ –∏ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞');
            return;
            }

        } else {
            await bot.deleteMessage(chatId, botMsgIdx);
            bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–∞ –∏ –±—Ä–µ–Ω–¥–∞.', startFindOptions);
            return;
        }

    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞', e);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.', startFindOptions);
        return bot.deleteMessage(chatId, botMsgIdx);
    }
   
}

//—Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–º–µ–π–ª–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ
const sendReserveEmail = async (chatId) => {

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });
    //
    const copy = `${user.email}`;   //–í–ê–ñ–ù–û: –°—Ç–∞–≤–∏—Ç—å –≤ –∫–æ–ø–∏—é —Ç–æ–ª—å–∫–æ     purchasing_internal@manders.ru

    try {

        let result = transporter.sendMail({
            from: 'n_kharitonov@manders.ru',
            to: `${recipient}, ${copy}`,
            subject: subject,
            text: textMail,
        });
        
        console.log(result);
        bot.sendMessage(chatId, `–°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–º–æ–π: \n<pre>"${subject}"</pre>\n—É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –∏ –≤ –æ—Ç–¥–µ–ª –∑–∞–∫—É–ø–æ–∫.\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–∏—Å—å–º–æ —Å –≤—ã—à–µ—É–ø–æ–º—è–Ω—É—Ç–æ–π —Ç–µ–º–æ–π –Ω–∞ <b>purchasing_internal@manders.ru</b>.`, beginWork2Options)

      } catch (e) {
        console.error(e);
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ-–º–µ–π–ª–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–∫—Å–µ–ª—å —Ñ–∞–π–ª–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –∏ –µ–µ –ø–æ–¥–ø–∞–ø–∫–∞—Ö
async function findExcelFile() {
    const folderPath = '/root/zak/xl';
    const files = await fs.promises.readdir(folderPath);
    let fileNameWallpaper = null;
    let fileNameTextile = null;
    
    for (const file of files) {
      const filePath = path.join(folderPath, file);
      const stat = await fs.promises.stat(filePath);
      
      if (stat.isDirectory()) {
        const result = await findExcelFiles(filePath);
        
        if (result.fileNameWallpaper) {
          fileNameWallpaper = result.fileNameWallpaper;
        }
        
        if (result.fileNameTextile) {
          fileNameTextile = result.fileNameTextile;
        }
      } else if (path.extname(file) === '.xlsx') {
        if (file === '–ö–∞—Ç–∞–ª–æ–≥–∏  —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤ —Å–∞–ª–æ–Ω—ã 26.09.19.xlsx') {
          fileNameWallpaper = filePath;
        } else if (file === '–¢–µ–∫—Å—Ç–∏–ª—å –ö–∞—Ç–∞–ª–æ–≥–∏  —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤ —Å–∞–ª–æ–Ω—ã.xlsx') {
          fileNameTextile = filePath;
        }
      }
      
      if (fileNameWallpaper && fileNameTextile) {
        break;
      }
    }
    
    return { fileNameWallpaper, fileNameTextile };
  }

//–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –æ–±–æ–µ–≤
async function findCatalogWallpaper(chatId, fileNameWallpaper) {

    if (fileNameWallpaper) {
        const workbookWallpaper = new ExcelJS.Workbook();
        const stream = fs.createReadStream(fileNameWallpaper);
        const wbWallpaper = await workbookWallpaper.xlsx.read(stream);
        const worksheetWallpaper = wbWallpaper.worksheets[0];

        let user = await UserModel.findOne({
          where: {
            chatId: chatId
          }
        });

        let foundMatchWallpaper = false;
        for (const row of worksheetWallpaper.eachRow()) {

            const cellValue = row.getCell('B').value;

            if (cellValue == user.catalog) {
                foundMatchWallpaper = true;

                const hValue = row.getCell('H').value;
                const iValue = row.getCell('I').value;
                const jValue = row.getCell('J').value;
                const kValue = row.getCell('K').value;
                const mValue = row.getCell('M').value;
                const nValue = row.getCell('N').value;
                const oValue = row.getCell('O').value;
                const pValue = row.getCell('P').value;

                if (
                    hValue !== null &&
                    iValue !== null &&
                    jValue !== null &&
                    kValue !== null &&
                    (mValue !== null || nValue !== null)
                ) {

                const h1Value = worksheetWallpaper.getCell(`H1`).value;
                const i1Value = worksheetWallpaper.getCell(`I1`).value;
                const j1Value = worksheetWallpaper.getCell(`J1`).value;
                const k1Value = worksheetWallpaper.getCell(`K1`).value;
                const m1Value = worksheetWallpaper.getCell(`M1`).value;
                const n1Value = worksheetWallpaper.getCell(`N1`).value;
    
                let message = `–ö–∞—Ç–∞–ª–æ–≥ —Å –¥–∞–Ω–Ω—ã–º –∞—Ä—Ç–∏–∫—É–ª–æ–º –∏–º–µ–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö:\n`;
                message += `${h1Value}: ${hValue}\n`;
                message += `${i1Value}: ${iValue}\n`;
                message += `${j1Value}: ${jValue}\n`;
                message += `${k1Value}: ${kValue}\n`;
                message += `${m1Value}: ${mValue}\n`;
                message += `${n1Value}: ${nValue}\n`;
    
                if (pValue !== null) {
                    const p1Value = worksheetWallpaper.getCell(`P1`).value;
                    message += `${p1Value}: ${pValue}\n`;
                }

                if (oValue !== null) {
                    const o1Value = worksheetWallpaper.getCell(`O1`).value;
                    message += `${o1Value}: ${oValue}\n`;
                }
    
                bot.deleteMessage(chatId, botMsgIdx);
                bot.sendMessage(chatId, message, beginWork3Options);

                }
            } else {

                bot.deleteMessage(chatId, botMsgIdx);
                return bot.sendMessage(
                    chatId,
                    `–ö–∞—Ç–∞–ª–æ–≥–æ–≤ –≤ —Å–∞–ª–æ–Ω–µ –Ω–µ—Ç.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Æ–ª–∏–∏ –°–∫—Ä–∏–±–Ω–∏–∫–∞ –∑–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞.`
                );
            }
        };
    }      
}

//–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–µ–∫—Å—Ç–∏–ª—è
async function findCatalogTextile(chatId, fileNameTextile) {

    if (fileNameTextile) {
        const workbookTextile = new ExcelJS.Workbook();
        const wbTextile = await workbookTextile.xlsx.fileStream(fileNameTextile);
        const worksheetTextile = wbTextile.worksheets[0];

        let user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
        });

        let foundMatchTextile = false;
        worksheetTextile.eachRow((row, rowNumber) => {

            const cellValue = row.getCell('B').value;

            if (cellValue == user.catalog) {
                foundMatchTextile = true;
                const iValue = row.getCell('I').value;
                const jValue = row.getCell('J').value;
                const kValue = row.getCell('K').value;
                const lValue = row.getCell('L').value;
                const nValue = row.getCell('N').value;
                const oValue = row.getCell('O').value;
                const pValue = row.getCell('P').value;

                if (iValue !== null ||
                    jValue !== null ||
                    kValue !== null ||
                    lValue !== null ||
                    nValue !== null ||
                    oValue !== null) {
                    const i1Value = worksheetTextile.getCell(`I1`).value;
                    const j1Value = worksheetTextile.getCell(`J1`).value;
                    const k1Value = worksheetTextile.getCell(`K1`).value;
                    const l1Value = worksheetTextile.getCell(`L1`).value;
                    const n1Value = worksheetTextile.getCell(`N1`).value;
                    const o1Value = worksheetTextile.getCell(`O1`).value;
                    const p1Value = worksheetTextile.getCell(`P1`).value;

                    let message = `–ö–∞—Ç–∞–ª–æ–≥ —Å –¥–∞–Ω–Ω—ã–º –∞—Ä—Ç–∏–∫—É–ª–æ–º –∏–º–µ–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö:\n`;
                    message += `${i1Value}: ${iValue}\n`;
                    message += `${j1Value}: ${jValue}\n`;
                    message += `${k1Value}: ${kValue}\n`;
                    message += `${l1Value}: ${lValue}\n`;
                    message += `${n1Value}: ${nValue}\n`;
                    message += `${o1Value}: ${oValue}\n`;

                    if (pValue !== null) {
                        const p1Value = worksheetWallpaper.getCell(`P1`).value;
                        message += `${p1Value}: ${pValue}\n`;
                    }

                    bot.deleteMessage(chatId, botMsgIdx);
                    bot.sendMessage(chatId, message, beginWork3Options);

                } else {

                    bot.deleteMessage(chatId, botMsgIdx);
                    return bot.sendMessage(
                        chatId,
                        `–ö–∞—Ç–∞–ª–æ–≥–æ–≤ –≤ —Å–∞–ª–æ–Ω–µ –Ω–µ—Ç.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Æ–ª–∏–∏ –°–∫—Ä–∏–±–Ω–∏–∫–∞ –∑–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞.`
                    );
                }
            }
        });
    }
}


//–°–¢–ê–†–¢ –†–ê–ë–û–¢–´ –ü–†–û–ì–†–ê–ú–ú–´=============================================================================================================

const start = async () => {
    console.log('–ë–æ—Ç –∑–∞–ø—â—É–µ–Ω...')

    try {
        await sequelize.authenticate();
        await sequelize.sync();
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ');
    } catch(err) {
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–º–∞–ª–æ—Å—å', err);
    }

//—Å–ª—É—à–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥======================================================================================

//—Å—Ç–∞—Ä—Ç
bot.onText(/\/start/, async msg => {
    const chatId = msg.chat.id;

    try {

        let user = await UserModel.findOne({
            where: {
                chatId: chatId
            }
        });

        //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if (user) {
            lc = null;
            return bot.sendMessage(
                chatId, 
                `–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.nickname}!
                \n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,
                \n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,
                \n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,
                \n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`)
        } else {
            user = await UserModel.create({chatId});
            console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${msg.from.first_name} ${msg.from.last_name}`);
             await user.update({
                firstName: msg.from.first_name, 
                lastName: msg.from.last_name, 
            });
            lc = '/editNickname';
            return bot.sendMessage(
                chatId, 
                `–ü—Ä–∏–≤–µ—Çc—Ç–≤—É—é, ${msg.from.first_name}! –ú–µ–Ω—è –∑–æ–≤—É—Ç –±–æ—Ç –ó–∞–∫.
                \n–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!
                \n–Ø –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –û–ü–£–°, –∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏ –∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ.
                \n–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?`);
        }  
     } catch (e) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', e);
    }

},

bot.onText(/\/game/, async msg => {
    const chatId = msg.chat.id;

    lc = '/game';
    const randomNumber = Math.floor(Math.random() * 10)
    chats[chatId] = randomNumber;
    return bot.sendMessage(chatId, `–û—Ç–≥–∞–¥–∞–π —á–∏—Å–ª–æüòè`, gameOptions)
}),

bot.onText(/\/x/, async msg => {
    const chatId = msg.chat.id;
    lc = null; 

    })
);

//—Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π==========================================================================================
bot.on('message', async msg => {
    const text = msg.text;
    const chatId = msg.chat.id;

    console.log(msg)

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });

    try {
    //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if (text === '/mainmenu') {
        
        if (user) {
            lc = null;
            await bot.sendMessage(
                chatId, 
                `–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.nickname}!
                \n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,
                \n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,
                \n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`);
        }
        return;
    }

    //–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
    if (text === '/beginwork') {

        if (!user.email) {
            await editEmail(chatId);
        } else {
            await bot.sendMessage(chatId, '–ß–µ–º –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?', workOptions);
        } 
        return; 
    }

    //–∏–∑–º–µ–Ω–∏—Ç—å e-mail
    if (text === '/editEmail') {
        return editEmail(chatId);
    }

    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º e-mail –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/editEmail') {
        await user.update({email: text.toLowerCase()});
        return bot.sendMessage(
            chatId, 
            `–í–∞—à e-mail "<b>${user.email}</b>" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω
            \n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ e-mail –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, beginWorkOptions);
    }            

    //–∏–∑–º–µ–Ω–∏—Ç—å Nickname
    if (text === '/editNickname') {
        return editNickname(chatId);
    }
    
    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º Nickname –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/editNickname') {
        await user.update({nickname: text});
        return bot.sendMessage(
            chatId, 
            `–•–æ—Ä–æ—à–æ, "<b>${user.nickname}</b>", —è –∑–∞–ø–æ–º–Ω—é.
            \n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, mainMenuOptions)
    }

    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/enterBrand') {
        await user.update({brand: text.toLowerCase()});
        return bot.sendMessage(
            chatId, 
            `–ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ "<b>${text}</b>" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
            \n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, VCOptions);
    }

    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/enterReserveNumber') {
        await user.update({reserveNumber: text});

        if ((user.reserveNumber) !== (user.reserveNumber.split(" ")[0])) {
            return bot.sendMessage(
                chatId, 
                `–í—ã –∂–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–∏—é <b>${user.reserveNumber.split(" ")[0]}</b> –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ <b>${user.reserveNumber.split(" ")[1]}</b> —à—Ç?
                \n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, enterReserveNumberOptions);
        } else {
            return bot.sendMessage(
                chatId, 
                `–í—ã –∂–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å  <b>${user.vendorCode}</b> –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ <b>${user.reserveNumber}</b> —à—Ç?
                \n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, enterReserveNumberOptions);
        }
    }

    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª –≤ —è—á–µ–π–∫—É –ë–î –∏ –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –Ω–∞ —Å–∞–π—Ç–µ
    if (lc === '/enterVC') {
        await user.update({vendorCode: text});
        await bot.sendMessage(
            chatId, 
            '–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ . . .');
        botMsgIdx = msg.message_id += 1; 
        return startFind(chatId);
    }

    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª –∫–∞—Ç–∞–ª–æ–≥–∞
    if(lc === '/catalog–°heck') {
        await user.update(
            {catalog: text}
            );
        await bot.sendMessage(
            chatId, 
            '–ò–¥—ë—Ç –ø–æ–∏—Å–∫ –∫–∞—Ç–∞–ª–æ–≥–∞ . . .');
        botMsgIdx = msg.message_id +=1 ; 
        return findCatalogWallpaper(chatId);
    }
    
    //–≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    if (text === '/infowork') {
        return bot.sendMessage(
            chatId, 
            `${user.nickname} –≤–æ—Ç, —á—Ç–æ –≤—ã –∏—Å–∫–∞–ª–∏:
            \n\n${user.typeFind}
            \n–ë—Ä–µ–Ω–¥: ${user.brand}
            \n–ê—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}
            \n\n–í–∞—à email: ${user.email}`);
    }


    if (text === '/infogame') {
        lc = null;
        return bot.sendMessage(
            chatId, 
            `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.right}"
            \n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.wrong}"`, resetOptions);
    }   
    
    if (text.toLowerCase().includes('–ø—Ä–∏–≤–µ—Ç')) {
        return bot.sendSticker(
            chatId, 
            'https://cdn.tlgrm.app/stickers/087/0cf/0870cf0d-ec03-41e5-b239-0eb164dca72e/192/1.webp');
    }

    if (text !== '/game' && text !== '/start') {
        return bot.sendSticker(
            chatId, 
            'https://tlgrm.ru/_/stickers/ccd/a8d/ccda8d5d-d492-4393-8bb7-e33f77c24907/12.webp');
    }
    } catch {
        console.log('–°—Ä–∞–±–æ—Ç–∞–ª —Å–ª—É—à–∞—Ç–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.')
    }


}) 
//–°–õ–£–®–ê–¢–ï–õ–¨ –î–û–ö–£–ú–ï–ù–¢–û–í========================================================================================================================================

bot.on('message', async msg => {

    try {
        const file_name = msg.document.file_name;
        const chatId = msg.chat.id;

        if (msg.document) {
            if ((file_name.includes('–ö–∞—Ç–∞–ª–æ–≥–∏'))) {
            
                await bot.getFile(msg.document.file_id).then((file) => {
                    const fileName = msg.document.file_name;
                    const fileStream = bot.getFileStream(file.file_id);
                    
                    fileStream.pipe(fs.createWriteStream(`/root/zak/xl/${fileName}`));
                    
                    fileStream.on('end', () => {
                        bot.sendMessage(chatId, `"${fileName}" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.`);
                    });
                });
                return;
            } else {
                return bot.sendMessage(chatId, `–í —Ü–µ–ª—è—Ö —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏, —è —Å–æ—Ö—Ä–∞–Ω—è—é –ª–∏—à—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —ç–∫—Å–µ–ª—å —Ñ–∞–π–ª—ã\n–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ, —á—Ç–æ–±—ã —è –Ω–∞—É—á–∏–ª—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–∞—à–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\nn_kharitonov@mander.ru`);
            }
        }
    } catch {
        console.log('C—Ä–∞–±–æ—Ç–∞–ª —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π.')
    }

});

//—Å–ª—É—à–∞—Ç–µ–ª—å –∫–æ–ª–±—ç–∫–æ–≤==========================================================================================================================================

bot.on('callback_query', async msg => {
    const data = msg.data;
    const chatId = msg.message.chat.id;

    console.log(msg)

    //—Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    const startGame = async (chatId) => {
        const randomNumber = Math.floor(Math.random() * 10)
        chats[chatId] = randomNumber;
        return bot.sendMessage(chatId, `–û—Ç–≥–∞–¥—ã–≤–∞–π:`, gameOptions)
    }

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });

    try {

    //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é 
    if (data === '/mainmenu') {
        if (lc === '/game' || lc === '/again' || lc === '/reset') {
            await bot.deleteMessage(chatId, msg.message.message_id);
        }
        lc = null;
        return bot.sendMessage(chatId, `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, ${user.nickname}\n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,\n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`) 
    }
    
    //–Ω–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤
    if(data === '/enterBrand') {
        lc = data;
        return bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞:`);
    }

    //–≤–≤–æ–¥ –∞—Ä—Ç–∏–∫—É–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤
    if(data === '/enterVC') {
        lc = data;
        return bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª:`);
    }
    
    //–Ω–∞—á–∞–ª–æ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    if (data === '/enterReserveNumber') {
        lc = data;
        return bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–∞—Ä—Ç–∏–∏ –∏ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å:\n<i>–Ω–∞–ø—Ä–∏–º–µ—Ä: 268–ê 3\n–µ—Å–ª–∏ –ø–∞—Ä—Ç–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ</i>`, { parse_mode: "HTML" })
    }

    //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    if (data === '/preSendEmail') {
        lc = data;
        if ((user.reserveNumber) !== (user.reserveNumber.split(" ")[0])) {
            subject = `–†–µ–∑–µ—Ä–≤ ${user.vendorCode}, –ø–∞—Ä—Ç–∏—è: ${user.reserveNumber.split(" ")[0]}, ${user.reserveNumber.split(" ")[1]} —à—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É ${(user.email).split("@")[0]}`;
            text = `\n\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–ü—Ä–æ—Å—å–±–∞ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ —Ä–µ–∑–µ—Ä–≤ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é: \n–∞—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}, –±—Ä–µ–Ω–¥: ${user.brand}, –ø–∞—Ä—Ç–∏—è: ${user.reserveNumber.split(" ")[0]} –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ: ${user.reserveNumber.split(" ")[1]} —à—Ç.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º –Ω–∞ purchasing_internal@manders.ru.`;
        } else {
            subject = `–†–µ–∑–µ—Ä–≤ ${user.vendorCode},  ${user.reserveNumber} —à—Ç, –ø–æ –∑–∞–ø—Ä–æ—Å—É ${(user.email).split("@")[0]}`;
            text = `\n\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–ü—Ä–æ—Å—å–±–∞ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ —Ä–µ–∑–µ—Ä–≤ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é: \n–∞—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}, –±—Ä–µ–Ω–¥: ${user.brand}, –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ: ${user.reserveNumber} —à—Ç.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º –Ω–∞ purchasing_internal@manders.ru.`;
        }
        return bot.sendMessage(chatId, `–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:${text}`, sendReserveOptions)
    }

    //–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
       if (data === '/sendReserveEmail') {
        lc = data;
        return sendReserveEmail(chatId);
    }

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ –Ω–∞–ª–∏—á–∏–∏ –≤ —Å–∞–ª–æ–Ω–µ
    if(data === '/catalog–°heck') {
        lc = data;
        return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª –∫–∞—Ç–∞–ª–æ–≥–∞ —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –∏—Å–∫–æ–º—ã–π –≤–∞–º–∏ —Ç–æ–≤–∞—Ä:');
    }

    //–ø—Ä–µ–≤—å—é —Ñ–æ—Ç–æ
    if(data === '/work2') {
        lc = null;
        return bot.sendMessage(chatId, sorry, mainMenuOptions);
    }

    //–¥–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑
    if(data === '/work3') {
        lc = null;
        return bot.sendMessage(chatId, sorry, mainMenuOptions);
    }


    //—Ä–µ—Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã
    if (data === '/again') {
        lc = data;
        await bot.deleteMessage(chatId, msg.message.message_id);
        return startGame(chatId);
    }

    //—Ä–µ—Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã
    if (data === '/infogame') {
        lc = data;
        await bot.deleteMessage(chatId, msg.message.message_id);
        return bot.sendMessage(chatId, `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.right}"\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.wrong}"`, resetOptions) 
    }

    //—Å–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã
    if(data === '/reset') {
        lc = data;
        await bot.deleteMessage(chatId, msg.message.message_id);
        if (user) {
            await user.update ({
                right: 0,
                wrong: 0,
            });
        }

        return bot.sendMessage(chatId, `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã —Å–±—Ä–æ—à–µ–Ω–Ω—ã:\n–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ${user.right},\n–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ${user.wrong}`, againOptions)
    }

    //–∑–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã –≤ –ë–î
    if (lc === '/game' || lc === '/again') {
        if (data == chats[chatId]) {
            user.right += 1;
            await user.save(chatId);
            await bot.deleteMessage(chatId, msg.message.message_id);
            return bot.sendMessage(chatId, `–¢—ã –æ—Ç–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É "${chats[chatId]}"`, againOptions);
        } else {
            user.wrong += 1;
            await user.save();
            await bot.deleteMessage(chatId, msg.message.message_id);
            return bot.sendMessage(chatId, `–ù–µ—Ç, —è –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É "${chats[chatId]}"`, againOptions);  
        }
    }

    } catch (err) {      
        return bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –≤ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç–µ–ª—è –∫–æ–ª–±—ç–∫–æ–≤', err);
    }

})

}

start();

    
