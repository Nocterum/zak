const TelegramApi = require('node-telegram-bot-api');
const axios = require('axios');
const cheerio = require('cheerio');
const token = '6076442091:AAGUxzIT8C7G7_hx4clixZpIi0Adtb2p2MA';
const bot = new TelegramApi(token, {
    polling: {
        interval: 300, //–º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Ç–≥ "–º–ª—Å–µ–∫"
        autoStart: true, //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        params: {
            timeout:10 //—Ç–∞–π–º–∞—É—Ç –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ "–º–ª—Å–µ–∫"
        }
    }
});

//–∏–º–ø–æ—Ä—Ç—ã
const {gameOptions, againOptions, resetOptions, workOptions, work1Options, VCOptions, brandOptions, startFindOptions, begintWorkOptions, mainMenuOptions} = require('./options');
const sequelize = require('./db');
const UserModel = require('./models');

//–≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
chats = {};
lc = {};    //–ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
plc = {};   //–ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
botMsgIdx = {};    //–∞–π–¥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞


//–º–µ–Ω—é –∫–æ–º–∞–Ω–¥
bot.setMyCommands([
    {command: '/mainmenu', description:'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'},
    {command: '/beginwork', description:'–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã'},
    {command: '/infowork', description:'–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤'},
    //{command: '/infogame', description:'–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∏–≥—Ä–µ'},
    //{command: '/game', description:'–ò–≥—Ä–∞ –≤ —É–≥–∞–¥–∞–π–∫—É'},
])


//—Ñ—É–Ω–∫—Ü–∏–∏=========================================================================================

const editEmail = async (chatId) => {
    lc = '/editEmail'
    return bot.sendMessage(chatId, `–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –í–∞—à —Ä–∞–±–æ—á–∏–π e-mail:`)
}

const editNickname = async (chatId) => {
    lc = '/editNickname'
    return bot.sendMessage(chatId, `–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –í–∞—à –Ω–∏–∫–Ω–µ–π–º:`)
}


//=============================================================================================================

const start = async () => {
    console.log('–ë–æ—Ç –∑–∞–ø—â—É–µ–Ω...')

    try {
        await sequelize.authenticate();
        await sequelize.sync();
        await console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ');
    } catch(err) {
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–º–∞–ª–æ—Å—å', err);
    }

//—Å–ª—É—à–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥======================================================================================

//—Å—Ç–∞—Ä—Ç
bot.onText(/\/start/, async msg => {
    const chatId = msg.chat.id;

    try {

        let user = await UserModel.findOne({
            where: {
                chatId: chatId
            }
        });

        //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if (user) {
            lc = null;
            return bot.sendMessage(chatId, `–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.nickname}!\n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,\n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`)
        } else {
            user = await UserModel.create({chatId});
            console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${msg.from.first_name} ${msg.from.last_name}`);
             await user.update({
                firstName: msg.from.first_name, 
                lastName: msg.from.last_name, 
            });
            lc = '/editNickname';
            return bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Çc—Ç–≤—É—é, ${msg.from.first_name}! –ú–µ–Ω—è –∑–æ–≤—É—Ç –±–æ—Ç –ó–∞–∫.\n–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!\n–Ø –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –û–ü–£–°, –∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏ –∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ.\n–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?`);
        }  
     } catch (e) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', e);
    }

},

bot.onText(/\/game/, async msg => {
    const chatId = msg.chat.id;

    lc = '/game';
    const randomNumber = Math.floor(Math.random() * 10)
    chats[chatId] = randomNumber;
    return bot.sendMessage(chatId, `–û—Ç–≥–∞–¥–∞–π —á–∏—Å–ª–æüòè`, gameOptions)
    }),

bot.onText(/\/infogame/, async msg => {
    const chatId = msg.chat.id;

        lc = null;
        await bot.sendMessage(chatId, `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.right}"\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.wrong}"`, resetOptions)
        await bot.deleteMessage(chatId, (msg.message.message_id -= 2));
        return bot.deleteMessage(chatId, (msg.message_id -= 1));
    }) 
)


//—Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π==========================================================================================
bot.on('message', async msg => {
    const text = msg.text;
    const chatId = msg.chat.id;
    const msgId2 = (msg.message_id -= 2);
    const msgId1 = (msg.message_id -= 1);

    //—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    const delMsg = async (chatId) => {

        if (msg && msgId2) {
            await bot.deleteMessage(chatId, msgId2);
        }
        if (msg && msgId1) {
            return bot.deleteMessage(chatId, msgId1);
        }

    }
    console.log(msg)

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });



    //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if (text === '/mainmenu') {
        
        if (user) {
            lc = null;
            await bot.sendMessage(chatId, `–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.nickname}!\n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,\n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`)
        }
        return delMsg(chatId);
        }

    //–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
    if (text === '/beginwork') {

        if (!user.email) {
            await editEmail(chatId);
        } else {
            await bot.sendMessage(chatId, `–ò —Ç–∞–∫, —Å —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?`, workOptions)
        } 
        return delMsg(chatId);
    }

    //–∏–∑–º–µ–Ω–∏—Ç—å e-mail
    if (text === '/editEmail') {
        await editEmail(chatId);
        return delMsg(chatId);
    }

    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º e-mail –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/editEmail') {
        await user.update({email: text});
        await bot.sendMessage(chatId, `–í–∞—à e-mail "<b>${user.email}</b>" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω\n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ e-mail –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, begintWorkOptions)
        return delMsg(chatId);
    }            

    //–∏–∑–º–µ–Ω–∏—Ç—å Nickname
    if (text === '/editNickname') {
        await editNickname(chatId);
        return delMsg(chatId);
    }
    
    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º Nickname –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/editNickname') {
        await user.update({nickname: text});
        await bot.sendMessage(chatId, `–•–æ—Ä–æ—à–æ, "<b>${user.nickname}</b>", —è –∑–∞–ø–æ–º–Ω—é.\n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, mainMenuOptions)
        return delMsg(chatId);
    }

    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/enterBrand') {
        await user.update({brand: text});
        await bot.sendMessage(chatId, `–ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ "<b>${text}</b>" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ\n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, VCOptions);
        return delMsg(chatId);
    }
    
    //–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª –≤ —è—á–µ–π–∫—É –ë–î
    if (lc === '/enterVC') {
        await user.update({vendorCode: text});
        await bot.sendMessage(chatId, `–ê—Ä—Ç–∏–∫—É–ª "<b>${text}</b>" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω\n<pre>(–¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª –ø–æ–≤—Ç–æ—Ä–Ω–æ)</pre>`, startFindOptions);
        return delMsg(chatId);
    }
    
    //–≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    if (text === '/infowork') {
        await bot.sendMessage(chatId, `${user.nickname} –≤–æ—Ç, —á—Ç–æ –≤—ã –∏—Å–∫–∞–ª–∏:\n\n${user.typeFind}\n–ë—Ä–µ–Ω–¥: ${user.brand}\n–ê—Ä—Ç–∏–∫—É–ª: ${user.vendorCode}\n\n–í–∞—à email: ${user.email}`);
        return delMsg(chatId);
    }

    if (text === 'recreatetable' && chatId === '356339062') {
        await UserModel.sync({ force: true })
        await bot.sendMessage(chatId, '–¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –º–æ–¥–µ–ª–∏ `User` —Ç–æ–ª—å–∫–æ —á—Ç–æ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞–Ω–æ–≤–æ!')
        return delMsg(chatId);
    }

    if (text.toLowerCase() === '–ø—Ä–∏–≤–µ—Ç' + '') {
        await bot.sendSticker(chatId, 'https://cdn.tlgrm.app/stickers/087/0cf/0870cf0d-ec03-41e5-b239-0eb164dca72e/192/1.webp')
        return delMsg(chatId);
    }

    if (text === '/infogame') {
        lc = null;
        await bot.sendMessage(chatId, `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.right}"\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.wrong}"`, resetOptions)
        return delMsg(chatId);
    }   

    if (text !== '/game' && text !== '/start') {
        await bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/ccd/a8d/ccda8d5d-d492-4393-8bb7-e33f77c24907/12.webp')
        return delMsg(chatId);
    }

})

//—Å–ª—É—à–∞—Ç–µ–ª—å –∫–æ–ª–±—ç–∫–æ–≤==========================================================================================================================================

bot.on('callback_query', async msg => {
    const data = msg.data;
    const chatId = msg.message.chat.id;
    const sorry = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üòÖ';
    const msgId2 = (msg.message.message_id -= 2);
    const msgId1 = (msg.message.message_id -= 1);

    //—É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    const delMsg = async (chatId) => {
        if (msg && msgId2) {
            await bot.deleteMessage(chatId, msgId2);
        }
        if (msg) {
            return bot.deleteMessage(chatId, msgId1);
        }
    }
    console.log(msg)

    //—Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    const startGame = async (chatId) => {
        const randomNumber = Math.floor(Math.random() * 10)
        chats[chatId] = randomNumber;
        return bot.sendMessage(chatId, `–û—Ç–≥–∞–¥—ã–≤–∞–π:`, gameOptions)
    }

    const user = await UserModel.findOne({
        where: {
            chatId: chatId
        }
    });

    try {

    //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if (data === '/mainmenu') {
        lc = null;
        await bot.sendMessage(chatId, `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, ${user.nickname}\n\n–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É: /beginwork,\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: /infowork,\n\n–ò–∑–º–µ–Ω–∏—Ç—å e-mail: /editEmail,\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ /editNickname`)
        return delMsg(chatId);
    }
        
    //–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
    if(data === '/beginwork') {
        lc = null;
        await bot.sendMessage(chatId, '–ò —Ç–∞–∫, —Å —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?', workOptions)
        return delMsg(chatId);
    }
    
    //–Ω–∞–ª–∏—á–∏–µ, —Å—Ä–æ–∫–∏, —Ä–µ–∑–µ—Ä–≤           
    if(data === '/work1') {
        lc = data;
        await bot.sendMessage(chatId, '–•–æ—Ä–æ—à–æ, —á—Ç–æ –º—ã –∏—â–µ–º?', work1Options);
        return delMsg(chatId);
    }

    //–∑–∞–ø–∏—Å—å typeFind
    if(data === '–¢–∫–∞–Ω—å') {
        await user.update ({
            typeFind: data,
        });
        await bot.sendMessage(chatId, `${data}, —Ç–∞–∫ –∏ –∑–∞–ø–∏—à–µ–º..`, brandOptions);
        return delMsg(chatId);
    }

    //–∑–∞–ø–∏—Å—å typeFind
    if(data === '–û–±–æ–∏') {
        await user.update ({
            typeFind: data,
        });
        await bot.sendMessage(chatId, `${data}, —Ç–∞–∫ –∏ –∑–∞–ø–∏—à–µ–º..`, brandOptions);
        return delMsg(chatId);
    }

    //–í–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞
    if(data === '/enterBrand') {
        lc = data;
        await bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞:`);
        return delMsg(chatId);
    }

    //–≤–≤–æ–¥–∏–º –∞—Ä—Ç–∏–∫—É–ª
    if(data === '/enterVC') {
        lc = data;
        await bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª:`);
        return delMsg(chatId);
    }
    
    //–ø–æ–∏—Å–∫ –ø–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º: brand, vendorCode, typeFind
    if(data === '/startFind') {
        lc = null;

    try {

        //—Ñ–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø–æ–∏—Å–∫–∞
        const searchUrl = `https://opusdeco.ru/search/?type=catalog&q=${user.brand}+${user.typeFind}+${user.vendorCode}`;
        console.log('—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞ —Å—Å—ã–ª–∫–∞');

        //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç
        const response = await axios.get(searchUrl);
        const $ = cheerio.load(response.data);
        console.log('–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');

        // –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–æ–∏—Å–∫–∞
        const firstProductLink = $('h3.item__card__title.card-product-general__title.mb-2 a').attr('href');
        console.log('–∏—Å–∫–æ–º–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞');

        if (firstProductLink) {
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
            const productResponse = await axios.get(`https://opusdeco.ru${firstProductLink}`);
            const $$ = cheerio.load(productResponse.data);
            console.log('—É—Å–ø–µ—à–Ω–æ –∑–∞—à—ë–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞');
            
            // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞
            //const availabilityTable = $$('[data-target="#stockAvailabilityModal"]').first();
            const availabilityTable = $$('#stockAvailabilityModal .modal-content table').first();
            console.log('–∫–Ω–æ–ø–∫–∞ "—É–∑–Ω–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ" –Ω–∞–π–¥–µ–Ω–∞');

            if (availabilityTable) {
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–ª–∏—Ü—ã
                const modalContent = availabilityTable.text().trim();
                console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–Ω–∞');

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                bot.sendMessage(chatId, modalContent);
                console.log('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞');
            
            } else {
                bot.sendMessage(chatId, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
            }
        } else {
            bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–∞ –∏ –±—Ä–µ–Ω–¥–∞.');
        }
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞', e);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.');
    }
   
        return delMsg(chatId);
    }
    
    //–ø—Ä–µ–≤—å—é —Ñ–æ—Ç–æ
    if(data === '/work2') {
        lc = null;
        await bot.sendMessage(chatId, sorry, mainMenuOptions);
        return delMsg(chatId);
    }

    //–¥–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑
    if(data === '/work3') {
        lc = null;
        await bot.sendMessage(chatId, sorry, mainMenuOptions);
        return delMsg(chatId);
    }


    //—Ä–µ—Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã
    if (data === '/again') {
        lc = data;
        await bot.deleteMessage(chatId, (msg.message.message_id +=3))
        return startGame(chatId);
    }

    //—Ä–µ—Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã
    if (data === '/infogame') {
        lc = null;
        await bot.deleteMessage(chatId, (msg.message.message_id += 3))
        return bot.sendMessage(chatId, `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.right}"\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: "${user.wrong}"`, resetOptions) 
    }

    //—Å–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã
    if(data === '/reset') {
        if (user) {
            await user.update ({
                right: 0,
                wrong: 0,
            });
        }
        await bot.deleteMessage(chatId, (msg.message.message_id += 3))
        return bot.sendMessage(chatId, `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã —Å–±—Ä–æ—à–µ–Ω–Ω—ã:\n–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ${user.right},\n–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ${user.wrong}`, againOptions)
    }

    //–∑–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã –≤ –ë–î
    if (lc === '/game' || lc === '/again') {
        if (data == chats[chatId]) {
            user.right += 1;
            await user.save();
            //await delMsg(chatId);
            await bot.deleteMessage(chatId, (msg.message.message_id += 3))
            return bot.sendMessage(chatId, `–¢—ã –æ—Ç–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É "${chats[chatId]}"`, againOptions);
        } else {
            user.wrong += 1;
            await user.save();
            //await delMsg(chatId);
            await bot.deleteMessage(chatId, (msg.message.message_id += 3))
            return bot.sendMessage(chatId, `–ù–µ—Ç, —è –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É "${chats[chatId]}"`, againOptions);  
        }
    }

    } catch (err) {      
        await bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –≤ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç–µ–ª—è –∫–æ–ª–±—ç–∫–æ–≤', err);
        return delMsg(chatId);
    }

})

}

start()

    
